# coding: utf-8

# flake8: noqa

"""
    LaunchDarkly REST API

    # Overview  ## Authentication  LaunchDarkly's REST API uses the HTTPS protocol with a minimum TLS version of 1.2.  All REST API resources are authenticated with either [personal or service access tokens](https://docs.launchdarkly.com/home/account/api), or session cookies. Other authentication mechanisms are not supported. You can manage personal access tokens on your [**Authorization**](https://app.launchdarkly.com/settings/authorization) page in the LaunchDarkly UI.  LaunchDarkly also has SDK keys, mobile keys, and client-side IDs that are used by our server-side SDKs, mobile SDKs, and JavaScript-based SDKs, respectively. **These keys cannot be used to access our REST API**. These keys are environment-specific, and can only perform read-only operations such as fetching feature flag settings.  | Auth mechanism                                                                                  | Allowed resources                                                                                     | Use cases                                          | | ----------------------------------------------------------------------------------------------- | ----------------------------------------------------------------------------------------------------- | -------------------------------------------------- | | [Personal or service access tokens](https://docs.launchdarkly.com/home/account/api) | Can be customized on a per-token basis                                                                | Building scripts, custom integrations, data export. | | SDK keys                                                                                        | Can only access read-only resources specific to server-side SDKs. Restricted to a single environment. | Server-side SDKs                     | | Mobile keys                                                                                     | Can only access read-only resources specific to mobile SDKs, and only for flags marked available to mobile keys. Restricted to a single environment.           | Mobile SDKs                                        | | Client-side ID                                                                                  | Can only access read-only resources specific to JavaScript-based client-side SDKs, and only for flags marked available to client-side. Restricted to a single environment.           | Client-side JavaScript                             |  > #### Keep your access tokens and SDK keys private > > Access tokens should _never_ be exposed in untrusted contexts. Never put an access token in client-side JavaScript, or embed it in a mobile application. LaunchDarkly has special mobile keys that you can embed in mobile apps. If you accidentally expose an access token or SDK key, you can reset it from your [**Authorization**](https://app.launchdarkly.com/settings/authorization) page. > > The client-side ID is safe to embed in untrusted contexts. It's designed for use in client-side JavaScript.  ### Authentication using request header  The preferred way to authenticate with the API is by adding an `Authorization` header containing your access token to your requests. The value of the `Authorization` header must be your access token.  Manage personal access tokens from the [**Authorization**](https://app.launchdarkly.com/settings/authorization) page.  ### Authentication using session cookie  For testing purposes, you can make API calls directly from your web browser. If you are logged in to the LaunchDarkly application, the API will use your existing session to authenticate calls.  If you have a [role](https://docs.launchdarkly.com/home/account/built-in-roles) other than Admin, or have a [custom role](https://docs.launchdarkly.com/home/account/custom-roles) defined, you may not have permission to perform some API calls. You will receive a `401` response code in that case.  > ### Modifying the Origin header causes an error > > LaunchDarkly validates that the Origin header for any API request authenticated by a session cookie matches the expected Origin header. The expected Origin header is `https://app.launchdarkly.com`. > > If the Origin header does not match what's expected, LaunchDarkly returns an error. This error can prevent the LaunchDarkly app from working correctly. > > Any browser extension that intentionally changes the Origin header can cause this problem. For example, the `Allow-Control-Allow-Origin: *` Chrome extension changes the Origin header to `http://evil.com` and causes the app to fail. > > To prevent this error, do not modify your Origin header. > > LaunchDarkly does not require origin matching when authenticating with an access token, so this issue does not affect normal API usage.  ## Representations  All resources expect and return JSON response bodies. Error responses also send a JSON body. To learn more about the error format of the API, read [Errors](/#section/Overview/Errors).  In practice this means that you always get a response with a `Content-Type` header set to `application/json`.  In addition, request bodies for `PATCH`, `POST`, and `PUT` requests must be encoded as JSON with a `Content-Type` header set to `application/json`.  ### Summary and detailed representations  When you fetch a list of resources, the response includes only the most important attributes of each resource. This is a _summary representation_ of the resource. When you fetch an individual resource, such as a single feature flag, you receive a _detailed representation_ of the resource.  The best way to find a detailed representation is to follow links. Every summary representation includes a link to its detailed representation.  ### Expanding responses  Sometimes the detailed representation of a resource does not include all of the attributes of the resource by default. If this is the case, the request method will clearly document this and describe which attributes you can include in an expanded response.  To include the additional attributes, append the `expand` request parameter to your request and add a comma-separated list of the attributes to include. For example, when you append `?expand=members,maintainers` to the [Get team](/tag/Teams#operation/getTeam) endpoint, the expanded response includes both of these attributes.  ### Links and addressability  The best way to navigate the API is by following links. These are attributes in representations that link to other resources. The API always uses the same format for links:  - Links to other resources within the API are encapsulated in a `_links` object - If the resource has a corresponding link to HTML content on the site, it is stored in a special `_site` link  Each link has two attributes:  - An `href`, which contains the URL - A `type`, which describes the content type  For example, a feature resource might return the following:  ```json {   \"_links\": {     \"parent\": {       \"href\": \"/api/features\",       \"type\": \"application/json\"     },     \"self\": {       \"href\": \"/api/features/sort.order\",       \"type\": \"application/json\"     }   },   \"_site\": {     \"href\": \"/features/sort.order\",     \"type\": \"text/html\"   } } ```  From this, you can navigate to the parent collection of features by following the `parent` link, or navigate to the site page for the feature by following the `_site` link.  Collections are always represented as a JSON object with an `items` attribute containing an array of representations. Like all other representations, collections have `_links` defined at the top level.  Paginated collections include `first`, `last`, `next`, and `prev` links containing a URL with the respective set of elements in the collection.  ## Updates  Resources that accept partial updates use the `PATCH` verb. Most resources support the [JSON patch](/reference#updates-using-json-patch) format. Some resources also support the [JSON merge patch](/reference#updates-using-json-merge-patch) format, and some resources support the [semantic patch](/reference#updates-using-semantic-patch) format, which is a way to specify the modifications to perform as a set of executable instructions. Each resource supports optional [comments](/reference#updates-with-comments) that you can submit with updates. Comments appear in outgoing webhooks, the audit log, and other integrations.  When a resource supports both JSON patch and semantic patch, we document both in the request method. However, the specific request body fields and descriptions included in our documentation only match one type of patch or the other.  ### Updates using JSON patch  [JSON patch](https://datatracker.ietf.org/doc/html/rfc6902) is a way to specify the modifications to perform on a resource. JSON patch uses paths and a limited set of operations to describe how to transform the current state of the resource into a new state. JSON patch documents are always arrays, where each element contains an operation, a path to the field to update, and the new value.  For example, in this feature flag representation:  ```json {     \"name\": \"New recommendations engine\",     \"key\": \"engine.enable\",     \"description\": \"This is the description\",     ... } ``` You can change the feature flag's description with the following patch document:  ```json [{ \"op\": \"replace\", \"path\": \"/description\", \"value\": \"This is the new description\" }] ```  You can specify multiple modifications to perform in a single request. You can also test that certain preconditions are met before applying the patch:  ```json [   { \"op\": \"test\", \"path\": \"/version\", \"value\": 10 },   { \"op\": \"replace\", \"path\": \"/description\", \"value\": \"The new description\" } ] ```  The above patch request tests whether the feature flag's `version` is `10`, and if so, changes the feature flag's description.  Attributes that are not editable, such as a resource's `_links`, have names that start with an underscore.  ### Updates using JSON merge patch  [JSON merge patch](https://datatracker.ietf.org/doc/html/rfc7386) is another format for specifying the modifications to perform on a resource. JSON merge patch is less expressive than JSON patch. However, in many cases it is simpler to construct a merge patch document. For example, you can change a feature flag's description with the following merge patch document:  ```json {   \"description\": \"New flag description\" } ```  ### Updates using semantic patch  Some resources support the semantic patch format. A semantic patch is a way to specify the modifications to perform on a resource as a set of executable instructions.  Semantic patch allows you to be explicit about intent using precise, custom instructions. In many cases, you can define semantic patch instructions independently of the current state of the resource. This can be useful when defining a change that may be applied at a future date.  To make a semantic patch request, you must append `domain-model=launchdarkly.semanticpatch` to your `Content-Type` header.  Here's how:  ``` Content-Type: application/json; domain-model=launchdarkly.semanticpatch ```  If you call a semantic patch resource without this header, you will receive a `400` response because your semantic patch will be interpreted as a JSON patch.  The body of a semantic patch request takes the following properties:  * `comment` (string): (Optional) A description of the update. * `environmentKey` (string): (Required for some resources only) The environment key. * `instructions` (array): (Required) A list of actions the update should perform. Each action in the list must be an object with a `kind` property that indicates the instruction. If the instruction requires parameters, you must include those parameters as additional fields in the object. The documentation for each resource that supports semantic patch includes the available instructions and any additional parameters.  For example:  ```json {   \"comment\": \"optional comment\",   \"instructions\": [ {\"kind\": \"turnFlagOn\"} ] } ```  Semantic patches are not applied partially; either all of the instructions are applied or none of them are. If **any** instruction is invalid, the endpoint returns an error and will not change the resource. If all instructions are valid, the request succeeds and the resources are updated if necessary, or left unchanged if they are already in the state you request.  ### Updates with comments  You can submit optional comments with `PATCH` changes.  To submit a comment along with a JSON patch document, use the following format:  ```json {   \"comment\": \"This is a comment string\",   \"patch\": [{ \"op\": \"replace\", \"path\": \"/description\", \"value\": \"The new description\" }] } ```  To submit a comment along with a JSON merge patch document, use the following format:  ```json {   \"comment\": \"This is a comment string\",   \"merge\": { \"description\": \"New flag description\" } } ```  To submit a comment along with a semantic patch, use the following format:  ```json {   \"comment\": \"This is a comment string\",   \"instructions\": [ {\"kind\": \"turnFlagOn\"} ] } ```  ## Errors  The API always returns errors in a common format. Here's an example:  ```json {   \"code\": \"invalid_request\",   \"message\": \"A feature with that key already exists\",   \"id\": \"30ce6058-87da-11e4-b116-123b93f75cba\" } ```  The `code` indicates the general class of error. The `message` is a human-readable explanation of what went wrong. The `id` is a unique identifier. Use it when you're working with LaunchDarkly Support to debug a problem with a specific API call.  ### HTTP status error response codes  | Code | Definition        | Description                                                                                       | Possible Solution                                                | | ---- | ----------------- | ------------------------------------------------------------------------------------------- | ---------------------------------------------------------------- | | 400  | Invalid request       | The request cannot be understood.                                    | Ensure JSON syntax in request body is correct.                   | | 401  | Invalid access token      | Requestor is unauthorized or does not have permission for this API call.                                                | Ensure your API access token is valid and has the appropriate permissions.                                     | | 403  | Forbidden         | Requestor does not have access to this resource.                                                | Ensure that the account member or access token has proper permissions set. | | 404  | Invalid resource identifier | The requested resource is not valid. | Ensure that the resource is correctly identified by ID or key. | | 405  | Method not allowed | The request method is not allowed on this resource. | Ensure that the HTTP verb is correct. | | 409  | Conflict          | The API request can not be completed because it conflicts with a concurrent API request. | Retry your request.                                              | | 422  | Unprocessable entity | The API request can not be completed because the update description can not be understood. | Ensure that the request body is correct for the type of patch you are using, either JSON patch or semantic patch. | 429  | Too many requests | Read [Rate limiting](/#section/Overview/Rate-limiting).                                               | Wait and try again later.                                        |  ## CORS  The LaunchDarkly API supports Cross Origin Resource Sharing (CORS) for AJAX requests from any origin. If an `Origin` header is given in a request, it will be echoed as an explicitly allowed origin. Otherwise the request returns a wildcard, `Access-Control-Allow-Origin: *`. For more information on CORS, read the [CORS W3C Recommendation](http://www.w3.org/TR/cors). Example CORS headers might look like:  ```http Access-Control-Allow-Headers: Accept, Content-Type, Content-Length, Accept-Encoding, Authorization Access-Control-Allow-Methods: OPTIONS, GET, DELETE, PATCH Access-Control-Allow-Origin: * Access-Control-Max-Age: 300 ```  You can make authenticated CORS calls just as you would make same-origin calls, using either [token or session-based authentication](/#section/Overview/Authentication). If you are using session authentication, you should set the `withCredentials` property for your `xhr` request to `true`. You should never expose your access tokens to untrusted entities.  ## Rate limiting  We use several rate limiting strategies to ensure the availability of our APIs. Rate-limited calls to our APIs return a `429` status code. Calls to our APIs include headers indicating the current rate limit status. The specific headers returned depend on the API route being called. The limits differ based on the route, authentication mechanism, and other factors. Routes that are not rate limited may not contain any of the headers described below.  > ### Rate limiting and SDKs > > LaunchDarkly SDKs are never rate limited and do not use the API endpoints defined here. LaunchDarkly uses a different set of approaches, including streaming/server-sent events and a global CDN, to ensure availability to the routes used by LaunchDarkly SDKs.  ### Global rate limits  Authenticated requests are subject to a global limit. This is the maximum number of calls that your account can make to the API per ten seconds. All service and personal access tokens on the account share this limit, so exceeding the limit with one access token will impact other tokens. Calls that are subject to global rate limits may return the headers below:  | Header name                    | Description                                                                      | | ------------------------------ | -------------------------------------------------------------------------------- | | `X-Ratelimit-Global-Remaining` | The maximum number of requests the account is permitted to make per ten seconds. | | `X-Ratelimit-Reset`            | The time at which the current rate limit window resets in epoch milliseconds.    |  We do not publicly document the specific number of calls that can be made globally. This limit may change, and we encourage clients to program against the specification, relying on the two headers defined above, rather than hardcoding to the current limit.  ### Route-level rate limits  Some authenticated routes have custom rate limits. These also reset every ten seconds. Any service or personal access tokens hitting the same route share this limit, so exceeding the limit with one access token may impact other tokens. Calls that are subject to route-level rate limits return the headers below:  | Header name                   | Description                                                                                           | | ----------------------------- | ----------------------------------------------------------------------------------------------------- | | `X-Ratelimit-Route-Remaining` | The maximum number of requests to the current route the account is permitted to make per ten seconds. | | `X-Ratelimit-Reset`           | The time at which the current rate limit window resets in epoch milliseconds.                         |  A _route_ represents a specific URL pattern and verb. For example, the [Delete environment](/tag/Environments#operation/deleteEnvironment) endpoint is considered a single route, and each call to delete an environment counts against your route-level rate limit for that route.  We do not publicly document the specific number of calls that an account can make to each endpoint per ten seconds. These limits may change, and we encourage clients to program against the specification, relying on the two headers defined above, rather than hardcoding to the current limits.  ### IP-based rate limiting  We also employ IP-based rate limiting on some API routes. If you hit an IP-based rate limit, your API response will include a `Retry-After` header indicating how long to wait before re-trying the call. Clients must wait at least `Retry-After` seconds before making additional calls to our API, and should employ jitter and backoff strategies to avoid triggering rate limits again.  ## OpenAPI (Swagger) and client libraries  We have a [complete OpenAPI (Swagger) specification](https://app.launchdarkly.com/api/v2/openapi.json) for our API.  We auto-generate multiple client libraries based on our OpenAPI specification. To learn more, visit the [collection of client libraries on GitHub](https://github.com/search?q=topic%3Alaunchdarkly-api+org%3Alaunchdarkly&type=Repositories). You can also use this specification to generate client libraries to interact with our REST API in your language of choice.  Our OpenAPI specification is supported by several API-based tools such as Postman and Insomnia. In many cases, you can directly import our specification to explore our APIs.  ## Method overriding  Some firewalls and HTTP clients restrict the use of verbs other than `GET` and `POST`. In those environments, our API endpoints that use `DELETE`, `PATCH`, and `PUT` verbs are inaccessible.  To avoid this issue, our API supports the `X-HTTP-Method-Override` header, allowing clients to \"tunnel\" `DELETE`, `PATCH`, and `PUT` requests using a `POST` request.  For example, to call a `PATCH` endpoint using a `POST` request, you can include `X-HTTP-Method-Override:PATCH` as a header.  ## Beta resources  We sometimes release new API resources in **beta** status before we release them with general availability.  Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.  We try to promote resources into general availability as quickly as possible. This happens after sufficient testing and when we're satisfied that we no longer need to make backwards-incompatible changes.  We mark beta resources with a \"Beta\" callout in our documentation, pictured below:  > ### This feature is in beta > > To use this feature, pass in a header including the `LD-API-Version` key with value set to `beta`. Use this header with each call. To learn more, read [Beta resources](/#section/Overview/Beta-resources). > > Resources that are in beta are still undergoing testing and development. They may change without notice, including becoming backwards incompatible.  ### Using beta resources  To use a beta resource, you must include a header in the request. If you call a beta resource without this header, you receive a `403` response.  Use this header:  ``` LD-API-Version: beta ```  ## Federal environments  The version of LaunchDarkly that is available on domains controlled by the United States government is different from the version of LaunchDarkly available to the general public. If you are an employee or contractor for a United States federal agency and use LaunchDarkly in your work, you likely use the federal instance of LaunchDarkly.  If you are working in the federal instance of LaunchDarkly, the base URI for each request is `https://app.launchdarkly.us`. In the \"Try it\" sandbox for each request, click the request path to view the complete resource path for the federal environment.  To learn more, read [LaunchDarkly in federal environments](https://docs.launchdarkly.com/home/infrastructure/federal).  ## Versioning  We try hard to keep our REST API backwards compatible, but we occasionally have to make backwards-incompatible changes in the process of shipping new features. These breaking changes can cause unexpected behavior if you don't prepare for them accordingly.  Updates to our REST API include support for the latest features in LaunchDarkly. We also release a new version of our REST API every time we make a breaking change. We provide simultaneous support for multiple API versions so you can migrate from your current API version to a new version at your own pace.  ### Setting the API version per request  You can set the API version on a specific request by sending an `LD-API-Version` header, as shown in the example below:  ``` LD-API-Version: 20240415 ```  The header value is the version number of the API version you would like to request. The number for each version corresponds to the date the version was released in `yyyymmdd` format. In the example above the version `20240415` corresponds to April 15, 2024.  ### Setting the API version per access token  When you create an access token, you must specify a specific version of the API to use. This ensures that integrations using this token cannot be broken by version changes.  Tokens created before versioning was released have their version set to `20160426`, which is the version of the API that existed before the current versioning scheme, so that they continue working the same way they did before versioning.  If you would like to upgrade your integration to use a new API version, you can explicitly set the header described above.  > ### Best practice: Set the header for every client or integration > > We recommend that you set the API version header explicitly in any client or integration you build. > > Only rely on the access token API version during manual testing.  ### API version changelog  |<div style=\"width:75px\">Version</div> | Changes | End of life (EOL) |---|---|---| | `20240415` | <ul><li>Changed several endpoints from unpaginated to paginated. Use the `limit` and `offset` query parameters to page through the results.</li> <li>Changed the [list access tokens](/tag/Access-tokens#operation/getTokens) endpoint: <ul><li>Response is now paginated with a default limit of `25`</li></ul></li> <li>Changed the [list account members](/tag/Account-members#operation/getMembers) endpoint: <ul><li>The `accessCheck` filter is no longer available</li></ul></li> <li>Changed the [list custom roles](/tag/Custom-roles#operation/getCustomRoles) endpoint: <ul><li>Response is now paginated with a default limit of `20`</li></ul></li> <li>Changed the [list feature flags](/tag/Feature-flags#operation/getFeatureFlags) endpoint: <ul><li>Response is now paginated with a default limit of `20`</li><li>The `environments` field is now only returned if the request is filtered by environment, using the `filterEnv` query parameter</li><li>The `filterEnv` query parameter supports a maximum of three environments</li><li>The `followerId`, `hasDataExport`, `status`, `contextKindTargeted`, and `segmentTargeted` filters are no longer available</li></ul></li> <li>Changed the [list segments](/tag/Segments#operation/getSegments) endpoint: <ul><li>Response is now paginated with a default limit of `20`</li></ul></li> <li>Changed the [list teams](/tag/Teams#operation/getTeams) endpoint: <ul><li>The `expand` parameter no longer supports including `projects` or `roles`</li><li>In paginated results, the maximum page size is now 100</li></ul></li> <li>Changed the [get workflows](/tag/Workflows#operation/getWorkflows) endpoint: <ul><li>Response is now paginated with a default limit of `20`</li><li>The `_conflicts` field in the response is no longer available</li></ul></li> </ul>  | Current | | `20220603` | <ul><li>Changed the [list projects](/tag/Projects#operation/getProjects) return value:<ul><li>Response is now paginated with a default limit of `20`.</li><li>Added support for filter and sort.</li><li>The project `environments` field is now expandable. This field is omitted by default.</li></ul></li><li>Changed the [get project](/tag/Projects#operation/getProject) return value:<ul><li>The `environments` field is now expandable. This field is omitted by default.</li></ul></li></ul> | 2025-04-15 | | `20210729` | <ul><li>Changed the [create approval request](/tag/Approvals#operation/postApprovalRequest) return value. It now returns HTTP Status Code `201` instead of `200`.</li><li> Changed the [get users](/tag/Users#operation/getUser) return value. It now returns a user record, not a user. </li><li>Added additional optional fields to environment, segments, flags, members, and segments, including the ability to create big segments. </li><li> Added default values for flag variations when new environments are created. </li><li>Added filtering and pagination for getting flags and members, including `limit`, `number`, `filter`, and `sort` query parameters. </li><li>Added endpoints for expiring user targets for flags and segments, scheduled changes, access tokens, Relay Proxy configuration, integrations and subscriptions, and approvals. </li></ul> | 2023-06-03 | | `20191212` | <ul><li>[List feature flags](/tag/Feature-flags#operation/getFeatureFlags) now defaults to sending summaries of feature flag configurations, equivalent to setting the query parameter `summary=true`. Summaries omit flag targeting rules and individual user targets from the payload. </li><li> Added endpoints for flags, flag status, projects, environments, audit logs, members, users, custom roles, segments, usage, streams, events, and data export. </li></ul> | 2022-07-29 | | `20160426` | <ul><li>Initial versioning of API. Tokens created before versioning have their version set to this.</li></ul> | 2020-12-12 |  To learn more about how EOL is determined, read LaunchDarkly's [End of Life (EOL) Policy](https://launchdarkly.com/policies/end-of-life-policy/). 

    The version of the OpenAPI document: 2.0
    Contact: support@launchdarkly.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


__version__ = "1.0.0"

# import apis into sdk package
from launchdarkly_client.api.ai_configs_beta_api import AIConfigsBetaApi
from launchdarkly_client.api.access_tokens_api import AccessTokensApi
from launchdarkly_client.api.account_members_api import AccountMembersApi
from launchdarkly_client.api.account_members_beta_api import AccountMembersBetaApi
from launchdarkly_client.api.account_usage_beta_api import AccountUsageBetaApi
from launchdarkly_client.api.applications_beta_api import ApplicationsBetaApi
from launchdarkly_client.api.approvals_api import ApprovalsApi
from launchdarkly_client.api.approvals_beta_api import ApprovalsBetaApi
from launchdarkly_client.api.audit_log_api import AuditLogApi
from launchdarkly_client.api.code_references_api import CodeReferencesApi
from launchdarkly_client.api.context_settings_api import ContextSettingsApi
from launchdarkly_client.api.contexts_api import ContextsApi
from launchdarkly_client.api.custom_roles_api import CustomRolesApi
from launchdarkly_client.api.data_export_destinations_api import DataExportDestinationsApi
from launchdarkly_client.api.environments_api import EnvironmentsApi
from launchdarkly_client.api.experiments_api import ExperimentsApi
from launchdarkly_client.api.feature_flags_api import FeatureFlagsApi
from launchdarkly_client.api.feature_flags_beta_api import FeatureFlagsBetaApi
from launchdarkly_client.api.flag_import_configurations_beta_api import FlagImportConfigurationsBetaApi
from launchdarkly_client.api.flag_links_beta_api import FlagLinksBetaApi
from launchdarkly_client.api.flag_triggers_api import FlagTriggersApi
from launchdarkly_client.api.follow_flags_api import FollowFlagsApi
from launchdarkly_client.api.holdouts_beta_api import HoldoutsBetaApi
from launchdarkly_client.api.insights_charts_beta_api import InsightsChartsBetaApi
from launchdarkly_client.api.insights_deployments_beta_api import InsightsDeploymentsBetaApi
from launchdarkly_client.api.insights_flag_events_beta_api import InsightsFlagEventsBetaApi
from launchdarkly_client.api.insights_pull_requests_beta_api import InsightsPullRequestsBetaApi
from launchdarkly_client.api.insights_repositories_beta_api import InsightsRepositoriesBetaApi
from launchdarkly_client.api.insights_scores_beta_api import InsightsScoresBetaApi
from launchdarkly_client.api.integration_audit_log_subscriptions_api import IntegrationAuditLogSubscriptionsApi
from launchdarkly_client.api.integration_delivery_configurations_beta_api import IntegrationDeliveryConfigurationsBetaApi
from launchdarkly_client.api.integrations_beta_api import IntegrationsBetaApi
from launchdarkly_client.api.layers_api import LayersApi
from launchdarkly_client.api.metrics_api import MetricsApi
from launchdarkly_client.api.metrics_beta_api import MetricsBetaApi
from launchdarkly_client.api.o_auth2_clients_api import OAuth2ClientsApi
from launchdarkly_client.api.other_api import OtherApi
from launchdarkly_client.api.persistent_store_integrations_beta_api import PersistentStoreIntegrationsBetaApi
from launchdarkly_client.api.projects_api import ProjectsApi
from launchdarkly_client.api.relay_proxy_configurations_api import RelayProxyConfigurationsApi
from launchdarkly_client.api.release_pipelines_beta_api import ReleasePipelinesBetaApi
from launchdarkly_client.api.releases_beta_api import ReleasesBetaApi
from launchdarkly_client.api.scheduled_changes_api import ScheduledChangesApi
from launchdarkly_client.api.segments_api import SegmentsApi
from launchdarkly_client.api.tags_api import TagsApi
from launchdarkly_client.api.teams_api import TeamsApi
from launchdarkly_client.api.teams_beta_api import TeamsBetaApi
from launchdarkly_client.api.user_settings_api import UserSettingsApi
from launchdarkly_client.api.users_api import UsersApi
from launchdarkly_client.api.users_beta_api import UsersBetaApi
from launchdarkly_client.api.webhooks_api import WebhooksApi
from launchdarkly_client.api.workflow_templates_api import WorkflowTemplatesApi
from launchdarkly_client.api.workflows_api import WorkflowsApi

# import ApiClient
from launchdarkly_client.api_response import ApiResponse
from launchdarkly_client.api_client import ApiClient
from launchdarkly_client.configuration import Configuration
from launchdarkly_client.exceptions import OpenApiException
from launchdarkly_client.exceptions import ApiTypeError
from launchdarkly_client.exceptions import ApiValueError
from launchdarkly_client.exceptions import ApiKeyError
from launchdarkly_client.exceptions import ApiAttributeError
from launchdarkly_client.exceptions import ApiException

# import models into sdk package
from launchdarkly_client.models.ai_config import AIConfig
from launchdarkly_client.models.ai_config_patch import AIConfigPatch
from launchdarkly_client.models.ai_config_post import AIConfigPost
from launchdarkly_client.models.ai_config_variation import AIConfigVariation
from launchdarkly_client.models.ai_config_variation_patch import AIConfigVariationPatch
from launchdarkly_client.models.ai_config_variation_post import AIConfigVariationPost
from launchdarkly_client.models.ai_config_variations_response import AIConfigVariationsResponse
from launchdarkly_client.models.ai_configs import AIConfigs
from launchdarkly_client.models.access import Access
from launchdarkly_client.models.access_allowed_reason import AccessAllowedReason
from launchdarkly_client.models.access_allowed_rep import AccessAllowedRep
from launchdarkly_client.models.access_denied import AccessDenied
from launchdarkly_client.models.access_denied_reason import AccessDeniedReason
from launchdarkly_client.models.access_token_post import AccessTokenPost
from launchdarkly_client.models.action_input import ActionInput
from launchdarkly_client.models.action_output import ActionOutput
from launchdarkly_client.models.ai_configs_access import AiConfigsAccess
from launchdarkly_client.models.ai_configs_access_allowed_reason import AiConfigsAccessAllowedReason
from launchdarkly_client.models.ai_configs_access_allowed_rep import AiConfigsAccessAllowedRep
from launchdarkly_client.models.ai_configs_access_denied import AiConfigsAccessDenied
from launchdarkly_client.models.ai_configs_access_denied_reason import AiConfigsAccessDeniedReason
from launchdarkly_client.models.ai_configs_link import AiConfigsLink
from launchdarkly_client.models.application_collection_rep import ApplicationCollectionRep
from launchdarkly_client.models.application_flag_collection_rep import ApplicationFlagCollectionRep
from launchdarkly_client.models.application_rep import ApplicationRep
from launchdarkly_client.models.application_version_rep import ApplicationVersionRep
from launchdarkly_client.models.application_versions_collection_rep import ApplicationVersionsCollectionRep
from launchdarkly_client.models.approval_request_response import ApprovalRequestResponse
from launchdarkly_client.models.approval_settings import ApprovalSettings
from launchdarkly_client.models.approvals_capability_config import ApprovalsCapabilityConfig
from launchdarkly_client.models.assigned_to_rep import AssignedToRep
from launchdarkly_client.models.audience import Audience
from launchdarkly_client.models.audience_configuration import AudienceConfiguration
from launchdarkly_client.models.audience_post import AudiencePost
from launchdarkly_client.models.audit_log_entry_listing_rep import AuditLogEntryListingRep
from launchdarkly_client.models.audit_log_entry_listing_rep_collection import AuditLogEntryListingRepCollection
from launchdarkly_client.models.audit_log_entry_rep import AuditLogEntryRep
from launchdarkly_client.models.audit_log_events_hook_capability_config_post import AuditLogEventsHookCapabilityConfigPost
from launchdarkly_client.models.audit_log_events_hook_capability_config_rep import AuditLogEventsHookCapabilityConfigRep
from launchdarkly_client.models.authorized_app_data_rep import AuthorizedAppDataRep
from launchdarkly_client.models.bayesian_beta_binomial_stats_rep import BayesianBetaBinomialStatsRep
from launchdarkly_client.models.bayesian_normal_stats_rep import BayesianNormalStatsRep
from launchdarkly_client.models.big_segment_store_integration import BigSegmentStoreIntegration
from launchdarkly_client.models.big_segment_store_integration_collection import BigSegmentStoreIntegrationCollection
from launchdarkly_client.models.big_segment_store_integration_collection_links import BigSegmentStoreIntegrationCollectionLinks
from launchdarkly_client.models.big_segment_store_integration_links import BigSegmentStoreIntegrationLinks
from launchdarkly_client.models.big_segment_store_status import BigSegmentStoreStatus
from launchdarkly_client.models.big_segment_target import BigSegmentTarget
from launchdarkly_client.models.boolean_defaults import BooleanDefaults
from launchdarkly_client.models.boolean_flag_defaults import BooleanFlagDefaults
from launchdarkly_client.models.branch_collection_rep import BranchCollectionRep
from launchdarkly_client.models.branch_rep import BranchRep
from launchdarkly_client.models.bulk_edit_members_rep import BulkEditMembersRep
from launchdarkly_client.models.bulk_edit_teams_rep import BulkEditTeamsRep
from launchdarkly_client.models.caller_identity_rep import CallerIdentityRep
from launchdarkly_client.models.capability_config_post import CapabilityConfigPost
from launchdarkly_client.models.capability_config_rep import CapabilityConfigRep
from launchdarkly_client.models.clause import Clause
from launchdarkly_client.models.client import Client
from launchdarkly_client.models.client_collection import ClientCollection
from launchdarkly_client.models.client_side_availability import ClientSideAvailability
from launchdarkly_client.models.client_side_availability_post import ClientSideAvailabilityPost
from launchdarkly_client.models.completed_by import CompletedBy
from launchdarkly_client.models.condition_input import ConditionInput
from launchdarkly_client.models.condition_output import ConditionOutput
from launchdarkly_client.models.conflict import Conflict
from launchdarkly_client.models.conflict_output import ConflictOutput
from launchdarkly_client.models.context_attribute_name import ContextAttributeName
from launchdarkly_client.models.context_attribute_names import ContextAttributeNames
from launchdarkly_client.models.context_attribute_names_collection import ContextAttributeNamesCollection
from launchdarkly_client.models.context_attribute_value import ContextAttributeValue
from launchdarkly_client.models.context_attribute_values import ContextAttributeValues
from launchdarkly_client.models.context_attribute_values_collection import ContextAttributeValuesCollection
from launchdarkly_client.models.context_instance_evaluation import ContextInstanceEvaluation
from launchdarkly_client.models.context_instance_evaluation_reason import ContextInstanceEvaluationReason
from launchdarkly_client.models.context_instance_evaluations import ContextInstanceEvaluations
from launchdarkly_client.models.context_instance_record import ContextInstanceRecord
from launchdarkly_client.models.context_instance_search import ContextInstanceSearch
from launchdarkly_client.models.context_instance_segment_membership import ContextInstanceSegmentMembership
from launchdarkly_client.models.context_instance_segment_memberships import ContextInstanceSegmentMemberships
from launchdarkly_client.models.context_instances import ContextInstances
from launchdarkly_client.models.context_kind_rep import ContextKindRep
from launchdarkly_client.models.context_kinds_collection_rep import ContextKindsCollectionRep
from launchdarkly_client.models.context_record import ContextRecord
from launchdarkly_client.models.context_search import ContextSearch
from launchdarkly_client.models.contexts import Contexts
from launchdarkly_client.models.copied_from_env import CopiedFromEnv
from launchdarkly_client.models.core_link import CoreLink
from launchdarkly_client.models.create_approval_request_request import CreateApprovalRequestRequest
from launchdarkly_client.models.create_copy_flag_config_approval_request_request import CreateCopyFlagConfigApprovalRequestRequest
from launchdarkly_client.models.create_flag_config_approval_request_request import CreateFlagConfigApprovalRequestRequest
from launchdarkly_client.models.create_phase_input import CreatePhaseInput
from launchdarkly_client.models.create_release_input import CreateReleaseInput
from launchdarkly_client.models.create_release_pipeline_input import CreateReleasePipelineInput
from launchdarkly_client.models.create_workflow_template_input import CreateWorkflowTemplateInput
from launchdarkly_client.models.credible_interval_rep import CredibleIntervalRep
from launchdarkly_client.models.custom_property import CustomProperty
from launchdarkly_client.models.custom_role import CustomRole
from launchdarkly_client.models.custom_role_post import CustomRolePost
from launchdarkly_client.models.custom_roles import CustomRoles
from launchdarkly_client.models.custom_workflow_input import CustomWorkflowInput
from launchdarkly_client.models.custom_workflow_meta import CustomWorkflowMeta
from launchdarkly_client.models.custom_workflow_output import CustomWorkflowOutput
from launchdarkly_client.models.custom_workflow_stage_meta import CustomWorkflowStageMeta
from launchdarkly_client.models.custom_workflows_listing_output import CustomWorkflowsListingOutput
from launchdarkly_client.models.default_client_side_availability import DefaultClientSideAvailability
from launchdarkly_client.models.default_client_side_availability_post import DefaultClientSideAvailabilityPost
from launchdarkly_client.models.defaults import Defaults
from launchdarkly_client.models.dependent_experiment_rep import DependentExperimentRep
from launchdarkly_client.models.dependent_flag import DependentFlag
from launchdarkly_client.models.dependent_flag_environment import DependentFlagEnvironment
from launchdarkly_client.models.dependent_flags_by_environment import DependentFlagsByEnvironment
from launchdarkly_client.models.dependent_metric_group_rep import DependentMetricGroupRep
from launchdarkly_client.models.dependent_metric_group_rep_with_metrics import DependentMetricGroupRepWithMetrics
from launchdarkly_client.models.dependent_metric_or_metric_group_rep import DependentMetricOrMetricGroupRep
from launchdarkly_client.models.deployment_collection_rep import DeploymentCollectionRep
from launchdarkly_client.models.deployment_rep import DeploymentRep
from launchdarkly_client.models.destination import Destination
from launchdarkly_client.models.destination_post import DestinationPost
from launchdarkly_client.models.destinations import Destinations
from launchdarkly_client.models.distribution import Distribution
from launchdarkly_client.models.dynamic_options import DynamicOptions
from launchdarkly_client.models.dynamic_options_parser import DynamicOptionsParser
from launchdarkly_client.models.endpoint import Endpoint
from launchdarkly_client.models.environment import Environment
from launchdarkly_client.models.environment_post import EnvironmentPost
from launchdarkly_client.models.environment_summary import EnvironmentSummary
from launchdarkly_client.models.environments import Environments
from launchdarkly_client.models.error import Error
from launchdarkly_client.models.evaluation_reason import EvaluationReason
from launchdarkly_client.models.evaluations_summary import EvaluationsSummary
from launchdarkly_client.models.execution_output import ExecutionOutput
from launchdarkly_client.models.expandable_approval_request_response import ExpandableApprovalRequestResponse
from launchdarkly_client.models.expandable_approval_requests_response import ExpandableApprovalRequestsResponse
from launchdarkly_client.models.expanded_flag_rep import ExpandedFlagRep
from launchdarkly_client.models.expanded_resource_rep import ExpandedResourceRep
from launchdarkly_client.models.experiment import Experiment
from launchdarkly_client.models.experiment_allocation_rep import ExperimentAllocationRep
from launchdarkly_client.models.experiment_bayesian_results_rep import ExperimentBayesianResultsRep
from launchdarkly_client.models.experiment_collection_rep import ExperimentCollectionRep
from launchdarkly_client.models.experiment_enabled_period_rep import ExperimentEnabledPeriodRep
from launchdarkly_client.models.experiment_environment_setting_rep import ExperimentEnvironmentSettingRep
from launchdarkly_client.models.experiment_info_rep import ExperimentInfoRep
from launchdarkly_client.models.experiment_patch_input import ExperimentPatchInput
from launchdarkly_client.models.experiment_post import ExperimentPost
from launchdarkly_client.models.expiring_target import ExpiringTarget
from launchdarkly_client.models.expiring_target_error import ExpiringTargetError
from launchdarkly_client.models.expiring_target_get_response import ExpiringTargetGetResponse
from launchdarkly_client.models.expiring_target_patch_response import ExpiringTargetPatchResponse
from launchdarkly_client.models.expiring_user_target_get_response import ExpiringUserTargetGetResponse
from launchdarkly_client.models.expiring_user_target_item import ExpiringUserTargetItem
from launchdarkly_client.models.expiring_user_target_patch_response import ExpiringUserTargetPatchResponse
from launchdarkly_client.models.export import Export
from launchdarkly_client.models.extinction import Extinction
from launchdarkly_client.models.extinction_collection_rep import ExtinctionCollectionRep
from launchdarkly_client.models.failure_reason_rep import FailureReasonRep
from launchdarkly_client.models.feature_flag import FeatureFlag
from launchdarkly_client.models.feature_flag_body import FeatureFlagBody
from launchdarkly_client.models.feature_flag_config import FeatureFlagConfig
from launchdarkly_client.models.feature_flag_scheduled_change import FeatureFlagScheduledChange
from launchdarkly_client.models.feature_flag_scheduled_changes import FeatureFlagScheduledChanges
from launchdarkly_client.models.feature_flag_status import FeatureFlagStatus
from launchdarkly_client.models.feature_flag_status_across_environments import FeatureFlagStatusAcrossEnvironments
from launchdarkly_client.models.feature_flag_statuses import FeatureFlagStatuses
from launchdarkly_client.models.feature_flags import FeatureFlags
from launchdarkly_client.models.file_rep import FileRep
from launchdarkly_client.models.flag_config_approval_request_response import FlagConfigApprovalRequestResponse
from launchdarkly_client.models.flag_config_approval_requests_response import FlagConfigApprovalRequestsResponse
from launchdarkly_client.models.flag_config_evaluation import FlagConfigEvaluation
from launchdarkly_client.models.flag_config_migration_settings_rep import FlagConfigMigrationSettingsRep
from launchdarkly_client.models.flag_copy_config_environment import FlagCopyConfigEnvironment
from launchdarkly_client.models.flag_copy_config_post import FlagCopyConfigPost
from launchdarkly_client.models.flag_defaults_rep import FlagDefaultsRep
from launchdarkly_client.models.flag_event_collection_rep import FlagEventCollectionRep
from launchdarkly_client.models.flag_event_experiment import FlagEventExperiment
from launchdarkly_client.models.flag_event_experiment_collection import FlagEventExperimentCollection
from launchdarkly_client.models.flag_event_experiment_iteration import FlagEventExperimentIteration
from launchdarkly_client.models.flag_event_impact_rep import FlagEventImpactRep
from launchdarkly_client.models.flag_event_member_rep import FlagEventMemberRep
from launchdarkly_client.models.flag_event_rep import FlagEventRep
from launchdarkly_client.models.flag_followers_by_proj_env_get_rep import FlagFollowersByProjEnvGetRep
from launchdarkly_client.models.flag_followers_get_rep import FlagFollowersGetRep
from launchdarkly_client.models.flag_import_configuration_post import FlagImportConfigurationPost
from launchdarkly_client.models.flag_import_integration import FlagImportIntegration
from launchdarkly_client.models.flag_import_integration_collection import FlagImportIntegrationCollection
from launchdarkly_client.models.flag_import_integration_collection_links import FlagImportIntegrationCollectionLinks
from launchdarkly_client.models.flag_import_integration_links import FlagImportIntegrationLinks
from launchdarkly_client.models.flag_import_status import FlagImportStatus
from launchdarkly_client.models.flag_input import FlagInput
from launchdarkly_client.models.flag_link_collection_rep import FlagLinkCollectionRep
from launchdarkly_client.models.flag_link_member import FlagLinkMember
from launchdarkly_client.models.flag_link_post import FlagLinkPost
from launchdarkly_client.models.flag_link_rep import FlagLinkRep
from launchdarkly_client.models.flag_listing_rep import FlagListingRep
from launchdarkly_client.models.flag_migration_settings_rep import FlagMigrationSettingsRep
from launchdarkly_client.models.flag_prerequisite_post import FlagPrerequisitePost
from launchdarkly_client.models.flag_reference_collection_rep import FlagReferenceCollectionRep
from launchdarkly_client.models.flag_reference_rep import FlagReferenceRep
from launchdarkly_client.models.flag_rep import FlagRep
from launchdarkly_client.models.flag_scheduled_changes_input import FlagScheduledChangesInput
from launchdarkly_client.models.flag_sempatch import FlagSempatch
from launchdarkly_client.models.flag_status_rep import FlagStatusRep
from launchdarkly_client.models.flag_summary import FlagSummary
from launchdarkly_client.models.flag_trigger_input import FlagTriggerInput
from launchdarkly_client.models.follow_flag_member import FollowFlagMember
from launchdarkly_client.models.followers_per_flag import FollowersPerFlag
from launchdarkly_client.models.forbidden_error_rep import ForbiddenErrorRep
from launchdarkly_client.models.form_variable import FormVariable
from launchdarkly_client.models.hmac_signature import HMACSignature
from launchdarkly_client.models.header_items import HeaderItems
from launchdarkly_client.models.holdout_detail_rep import HoldoutDetailRep
from launchdarkly_client.models.holdout_patch_input import HoldoutPatchInput
from launchdarkly_client.models.holdout_post_request import HoldoutPostRequest
from launchdarkly_client.models.holdout_rep import HoldoutRep
from launchdarkly_client.models.holdouts_collection_rep import HoldoutsCollectionRep
from launchdarkly_client.models.hunk_rep import HunkRep
from launchdarkly_client.models.initiator_rep import InitiatorRep
from launchdarkly_client.models.insight_group import InsightGroup
from launchdarkly_client.models.insight_group_collection import InsightGroupCollection
from launchdarkly_client.models.insight_group_collection_metadata import InsightGroupCollectionMetadata
from launchdarkly_client.models.insight_group_collection_score_metadata import InsightGroupCollectionScoreMetadata
from launchdarkly_client.models.insight_group_scores import InsightGroupScores
from launchdarkly_client.models.insight_groups_count_by_indicator import InsightGroupsCountByIndicator
from launchdarkly_client.models.insight_period import InsightPeriod
from launchdarkly_client.models.insight_scores import InsightScores
from launchdarkly_client.models.insights_chart import InsightsChart
from launchdarkly_client.models.insights_chart_bounds import InsightsChartBounds
from launchdarkly_client.models.insights_chart_metadata import InsightsChartMetadata
from launchdarkly_client.models.insights_chart_metric import InsightsChartMetric
from launchdarkly_client.models.insights_chart_series import InsightsChartSeries
from launchdarkly_client.models.insights_chart_series_data_point import InsightsChartSeriesDataPoint
from launchdarkly_client.models.insights_chart_series_metadata import InsightsChartSeriesMetadata
from launchdarkly_client.models.insights_chart_series_metadata_axis import InsightsChartSeriesMetadataAxis
from launchdarkly_client.models.insights_metric_indicator_range import InsightsMetricIndicatorRange
from launchdarkly_client.models.insights_metric_score import InsightsMetricScore
from launchdarkly_client.models.insights_metric_tier_definition import InsightsMetricTierDefinition
from launchdarkly_client.models.insights_repository import InsightsRepository
from launchdarkly_client.models.insights_repository_collection import InsightsRepositoryCollection
from launchdarkly_client.models.insights_repository_project import InsightsRepositoryProject
from launchdarkly_client.models.insights_repository_project_collection import InsightsRepositoryProjectCollection
from launchdarkly_client.models.insights_repository_project_mappings import InsightsRepositoryProjectMappings
from launchdarkly_client.models.instruction_user_request import InstructionUserRequest
from launchdarkly_client.models.integration import Integration
from launchdarkly_client.models.integration_configuration_collection_rep import IntegrationConfigurationCollectionRep
from launchdarkly_client.models.integration_configuration_post import IntegrationConfigurationPost
from launchdarkly_client.models.integration_configurations_rep import IntegrationConfigurationsRep
from launchdarkly_client.models.integration_delivery_configuration import IntegrationDeliveryConfiguration
from launchdarkly_client.models.integration_delivery_configuration_collection import IntegrationDeliveryConfigurationCollection
from launchdarkly_client.models.integration_delivery_configuration_collection_links import IntegrationDeliveryConfigurationCollectionLinks
from launchdarkly_client.models.integration_delivery_configuration_links import IntegrationDeliveryConfigurationLinks
from launchdarkly_client.models.integration_delivery_configuration_post import IntegrationDeliveryConfigurationPost
from launchdarkly_client.models.integration_delivery_configuration_response import IntegrationDeliveryConfigurationResponse
from launchdarkly_client.models.integration_metadata import IntegrationMetadata
from launchdarkly_client.models.integration_status import IntegrationStatus
from launchdarkly_client.models.integration_status_rep import IntegrationStatusRep
from launchdarkly_client.models.integration_subscription_status_rep import IntegrationSubscriptionStatusRep
from launchdarkly_client.models.integrations import Integrations
from launchdarkly_client.models.invalid_request_error_rep import InvalidRequestErrorRep
from launchdarkly_client.models.ip_list import IpList
from launchdarkly_client.models.iteration_input import IterationInput
from launchdarkly_client.models.iteration_rep import IterationRep
from launchdarkly_client.models.last_seen_metadata import LastSeenMetadata
from launchdarkly_client.models.layer_collection_rep import LayerCollectionRep
from launchdarkly_client.models.layer_configuration_rep import LayerConfigurationRep
from launchdarkly_client.models.layer_patch_input import LayerPatchInput
from launchdarkly_client.models.layer_post import LayerPost
from launchdarkly_client.models.layer_rep import LayerRep
from launchdarkly_client.models.layer_reservation_rep import LayerReservationRep
from launchdarkly_client.models.layer_snapshot_rep import LayerSnapshotRep
from launchdarkly_client.models.lead_time_stages_rep import LeadTimeStagesRep
from launchdarkly_client.models.legacy_experiment_rep import LegacyExperimentRep
from launchdarkly_client.models.link import Link
from launchdarkly_client.models.maintainer_rep import MaintainerRep
from launchdarkly_client.models.maintainer_team import MaintainerTeam
from launchdarkly_client.models.member import Member
from launchdarkly_client.models.member_data_rep import MemberDataRep
from launchdarkly_client.models.member_import_item import MemberImportItem
from launchdarkly_client.models.member_permission_grant_summary_rep import MemberPermissionGrantSummaryRep
from launchdarkly_client.models.member_summary import MemberSummary
from launchdarkly_client.models.member_team_summary_rep import MemberTeamSummaryRep
from launchdarkly_client.models.member_teams_post_input import MemberTeamsPostInput
from launchdarkly_client.models.members import Members
from launchdarkly_client.models.members_patch_input import MembersPatchInput
from launchdarkly_client.models.message import Message
from launchdarkly_client.models.method_not_allowed_error_rep import MethodNotAllowedErrorRep
from launchdarkly_client.models.metric_by_variation import MetricByVariation
from launchdarkly_client.models.metric_collection_rep import MetricCollectionRep
from launchdarkly_client.models.metric_event_default_rep import MetricEventDefaultRep
from launchdarkly_client.models.metric_group_collection_rep import MetricGroupCollectionRep
from launchdarkly_client.models.metric_group_post import MetricGroupPost
from launchdarkly_client.models.metric_group_rep import MetricGroupRep
from launchdarkly_client.models.metric_group_results_rep import MetricGroupResultsRep
from launchdarkly_client.models.metric_in_group_rep import MetricInGroupRep
from launchdarkly_client.models.metric_in_group_results_rep import MetricInGroupResultsRep
from launchdarkly_client.models.metric_in_metric_group_input import MetricInMetricGroupInput
from launchdarkly_client.models.metric_input import MetricInput
from launchdarkly_client.models.metric_listing_rep import MetricListingRep
from launchdarkly_client.models.metric_post import MetricPost
from launchdarkly_client.models.metric_rep import MetricRep
from launchdarkly_client.models.metric_seen import MetricSeen
from launchdarkly_client.models.metric_v2_rep import MetricV2Rep
from launchdarkly_client.models.metrics import Metrics
from launchdarkly_client.models.migration_safety_issue_rep import MigrationSafetyIssueRep
from launchdarkly_client.models.migration_settings_post import MigrationSettingsPost
from launchdarkly_client.models.model_config import ModelConfig
from launchdarkly_client.models.model_config_post import ModelConfigPost
from launchdarkly_client.models.model_import import ModelImport
from launchdarkly_client.models.modification import Modification
from launchdarkly_client.models.multi_environment_dependent_flag import MultiEnvironmentDependentFlag
from launchdarkly_client.models.multi_environment_dependent_flags import MultiEnvironmentDependentFlags
from launchdarkly_client.models.naming_convention import NamingConvention
from launchdarkly_client.models.new_member_form import NewMemberForm
from launchdarkly_client.models.not_found_error_rep import NotFoundErrorRep
from launchdarkly_client.models.oauth_client_post import OauthClientPost
from launchdarkly_client.models.options_array import OptionsArray
from launchdarkly_client.models.paginated_links import PaginatedLinks
from launchdarkly_client.models.parameter_default import ParameterDefault
from launchdarkly_client.models.parameter_rep import ParameterRep
from launchdarkly_client.models.parent_and_self_links import ParentAndSelfLinks
from launchdarkly_client.models.parent_link import ParentLink
from launchdarkly_client.models.parent_resource_rep import ParentResourceRep
from launchdarkly_client.models.patch_failed_error_rep import PatchFailedErrorRep
from launchdarkly_client.models.patch_flags_request import PatchFlagsRequest
from launchdarkly_client.models.patch_operation import PatchOperation
from launchdarkly_client.models.patch_segment_expiring_target_input_rep import PatchSegmentExpiringTargetInputRep
from launchdarkly_client.models.patch_segment_expiring_target_instruction import PatchSegmentExpiringTargetInstruction
from launchdarkly_client.models.patch_segment_instruction import PatchSegmentInstruction
from launchdarkly_client.models.patch_segment_request import PatchSegmentRequest
from launchdarkly_client.models.patch_users_request import PatchUsersRequest
from launchdarkly_client.models.patch_with_comment import PatchWithComment
from launchdarkly_client.models.permission_grant_input import PermissionGrantInput
from launchdarkly_client.models.phase import Phase
from launchdarkly_client.models.phase_info import PhaseInfo
from launchdarkly_client.models.post_approval_request_apply_request import PostApprovalRequestApplyRequest
from launchdarkly_client.models.post_approval_request_review_request import PostApprovalRequestReviewRequest
from launchdarkly_client.models.post_deployment_event_input import PostDeploymentEventInput
from launchdarkly_client.models.post_flag_scheduled_changes_input import PostFlagScheduledChangesInput
from launchdarkly_client.models.post_insight_group_params import PostInsightGroupParams
from launchdarkly_client.models.prerequisite import Prerequisite
from launchdarkly_client.models.project import Project
from launchdarkly_client.models.project_post import ProjectPost
from launchdarkly_client.models.project_rep import ProjectRep
from launchdarkly_client.models.project_summary import ProjectSummary
from launchdarkly_client.models.project_summary_collection import ProjectSummaryCollection
from launchdarkly_client.models.projects import Projects
from launchdarkly_client.models.pull_request_collection_rep import PullRequestCollectionRep
from launchdarkly_client.models.pull_request_lead_time_rep import PullRequestLeadTimeRep
from launchdarkly_client.models.pull_request_rep import PullRequestRep
from launchdarkly_client.models.put_branch import PutBranch
from launchdarkly_client.models.randomization_settings_put import RandomizationSettingsPut
from launchdarkly_client.models.randomization_settings_rep import RandomizationSettingsRep
from launchdarkly_client.models.randomization_unit_input import RandomizationUnitInput
from launchdarkly_client.models.randomization_unit_rep import RandomizationUnitRep
from launchdarkly_client.models.rate_limited_error_rep import RateLimitedErrorRep
from launchdarkly_client.models.recent_trigger_body import RecentTriggerBody
from launchdarkly_client.models.reference_rep import ReferenceRep
from launchdarkly_client.models.related_experiment_rep import RelatedExperimentRep
from launchdarkly_client.models.relative_difference_rep import RelativeDifferenceRep
from launchdarkly_client.models.relay_auto_config_collection_rep import RelayAutoConfigCollectionRep
from launchdarkly_client.models.relay_auto_config_post import RelayAutoConfigPost
from launchdarkly_client.models.relay_auto_config_rep import RelayAutoConfigRep
from launchdarkly_client.models.release import Release
from launchdarkly_client.models.release_audience import ReleaseAudience
from launchdarkly_client.models.release_guardian_configuration import ReleaseGuardianConfiguration
from launchdarkly_client.models.release_guardian_configuration_input import ReleaseGuardianConfigurationInput
from launchdarkly_client.models.release_phase import ReleasePhase
from launchdarkly_client.models.release_pipeline import ReleasePipeline
from launchdarkly_client.models.release_pipeline_collection import ReleasePipelineCollection
from launchdarkly_client.models.release_progression import ReleaseProgression
from launchdarkly_client.models.release_progression_collection import ReleaseProgressionCollection
from launchdarkly_client.models.releaser_audience_config_input import ReleaserAudienceConfigInput
from launchdarkly_client.models.repository_collection_rep import RepositoryCollectionRep
from launchdarkly_client.models.repository_post import RepositoryPost
from launchdarkly_client.models.repository_rep import RepositoryRep
from launchdarkly_client.models.resource_access import ResourceAccess
from launchdarkly_client.models.resource_id_response import ResourceIDResponse
from launchdarkly_client.models.resource_id import ResourceId
from launchdarkly_client.models.review_output import ReviewOutput
from launchdarkly_client.models.review_response import ReviewResponse
from launchdarkly_client.models.rollout import Rollout
from launchdarkly_client.models.root_response import RootResponse
from launchdarkly_client.models.rule import Rule
from launchdarkly_client.models.rule_clause import RuleClause
from launchdarkly_client.models.sdk_list_rep import SdkListRep
from launchdarkly_client.models.sdk_version_list_rep import SdkVersionListRep
from launchdarkly_client.models.sdk_version_rep import SdkVersionRep
from launchdarkly_client.models.segment_body import SegmentBody
from launchdarkly_client.models.segment_metadata import SegmentMetadata
from launchdarkly_client.models.segment_target import SegmentTarget
from launchdarkly_client.models.segment_user_list import SegmentUserList
from launchdarkly_client.models.segment_user_state import SegmentUserState
from launchdarkly_client.models.series import Series
from launchdarkly_client.models.series_intervals_rep import SeriesIntervalsRep
from launchdarkly_client.models.series_list_rep import SeriesListRep
from launchdarkly_client.models.simple_holdout_rep import SimpleHoldoutRep
from launchdarkly_client.models.sliced_results_rep import SlicedResultsRep
from launchdarkly_client.models.source_env import SourceEnv
from launchdarkly_client.models.source_flag import SourceFlag
from launchdarkly_client.models.stage_input import StageInput
from launchdarkly_client.models.stage_output import StageOutput
from launchdarkly_client.models.statement import Statement
from launchdarkly_client.models.statement_post import StatementPost
from launchdarkly_client.models.statistic_collection_rep import StatisticCollectionRep
from launchdarkly_client.models.statistic_rep import StatisticRep
from launchdarkly_client.models.statistics_root import StatisticsRoot
from launchdarkly_client.models.status_conflict_error_rep import StatusConflictErrorRep
from launchdarkly_client.models.status_response import StatusResponse
from launchdarkly_client.models.status_service_unavailable import StatusServiceUnavailable
from launchdarkly_client.models.store_integration_error import StoreIntegrationError
from launchdarkly_client.models.subject_data_rep import SubjectDataRep
from launchdarkly_client.models.subscription_post import SubscriptionPost
from launchdarkly_client.models.tags_collection import TagsCollection
from launchdarkly_client.models.tags_link import TagsLink
from launchdarkly_client.models.target import Target
from launchdarkly_client.models.target_resource_rep import TargetResourceRep
from launchdarkly_client.models.team import Team
from launchdarkly_client.models.team_custom_role import TeamCustomRole
from launchdarkly_client.models.team_custom_roles import TeamCustomRoles
from launchdarkly_client.models.team_imports_rep import TeamImportsRep
from launchdarkly_client.models.team_maintainers import TeamMaintainers
from launchdarkly_client.models.team_members import TeamMembers
from launchdarkly_client.models.team_patch_input import TeamPatchInput
from launchdarkly_client.models.team_post_input import TeamPostInput
from launchdarkly_client.models.team_projects import TeamProjects
from launchdarkly_client.models.teams import Teams
from launchdarkly_client.models.teams_patch_input import TeamsPatchInput
from launchdarkly_client.models.timestamp_rep import TimestampRep
from launchdarkly_client.models.token import Token
from launchdarkly_client.models.token_summary import TokenSummary
from launchdarkly_client.models.tokens import Tokens
from launchdarkly_client.models.treatment_input import TreatmentInput
from launchdarkly_client.models.treatment_parameter_input import TreatmentParameterInput
from launchdarkly_client.models.treatment_rep import TreatmentRep
from launchdarkly_client.models.treatment_result_rep import TreatmentResultRep
from launchdarkly_client.models.trigger_post import TriggerPost
from launchdarkly_client.models.trigger_workflow_collection_rep import TriggerWorkflowCollectionRep
from launchdarkly_client.models.trigger_workflow_rep import TriggerWorkflowRep
from launchdarkly_client.models.unauthorized_error_rep import UnauthorizedErrorRep
from launchdarkly_client.models.update_phase_status_input import UpdatePhaseStatusInput
from launchdarkly_client.models.update_release_pipeline_input import UpdateReleasePipelineInput
from launchdarkly_client.models.upsert_context_kind_payload import UpsertContextKindPayload
from launchdarkly_client.models.upsert_flag_defaults_payload import UpsertFlagDefaultsPayload
from launchdarkly_client.models.upsert_payload_rep import UpsertPayloadRep
from launchdarkly_client.models.upsert_response_rep import UpsertResponseRep
from launchdarkly_client.models.url_post import UrlPost
from launchdarkly_client.models.user import User
from launchdarkly_client.models.user_attribute_names_rep import UserAttributeNamesRep
from launchdarkly_client.models.user_flag_setting import UserFlagSetting
from launchdarkly_client.models.user_flag_settings import UserFlagSettings
from launchdarkly_client.models.user_record import UserRecord
from launchdarkly_client.models.user_segment import UserSegment
from launchdarkly_client.models.user_segment_rule import UserSegmentRule
from launchdarkly_client.models.user_segments import UserSegments
from launchdarkly_client.models.users import Users
from launchdarkly_client.models.users_rep import UsersRep
from launchdarkly_client.models.validation_failed_error_rep import ValidationFailedErrorRep
from launchdarkly_client.models.value_put import ValuePut
from launchdarkly_client.models.variation import Variation
from launchdarkly_client.models.variation_eval_summary import VariationEvalSummary
from launchdarkly_client.models.variation_or_rollout_rep import VariationOrRolloutRep
from launchdarkly_client.models.variation_summary import VariationSummary
from launchdarkly_client.models.versions_rep import VersionsRep
from launchdarkly_client.models.webhook import Webhook
from launchdarkly_client.models.webhook_post import WebhookPost
from launchdarkly_client.models.webhooks import Webhooks
from launchdarkly_client.models.weighted_variation import WeightedVariation
from launchdarkly_client.models.workflow_template_metadata import WorkflowTemplateMetadata
from launchdarkly_client.models.workflow_template_output import WorkflowTemplateOutput
from launchdarkly_client.models.workflow_template_parameter import WorkflowTemplateParameter
from launchdarkly_client.models.workflow_templates_listing_output_rep import WorkflowTemplatesListingOutputRep

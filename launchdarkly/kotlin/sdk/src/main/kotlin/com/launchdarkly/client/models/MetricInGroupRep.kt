/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models

import com.launchdarkly.client.models.Link

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param key The metric key
 * @param name The metric name
 * @param kind The kind of event the metric tracks
 * @param links The location and content type of related resources
 * @param versionId The version ID of the metric
 * @param isNumeric For custom metrics, whether to track numeric changes in value against a baseline (<code>true</code>) or to track a conversion when an end user takes an action (<code>false</code>).
 * @param unitAggregationType The type of unit aggregation to use for the metric
 * @param nameInGroup Name of the metric when used within the associated metric group. Can be different from the original name of the metric. Required if and only if the metric group is a <code>funnel</code>.
 * @param randomizationUnits The randomization units for the metric
 */


data class MetricInGroupRep (

    /* The metric key */
    @Json(name = "key")
    val key: kotlin.String,

    /* The metric name */
    @Json(name = "name")
    val name: kotlin.String,

    /* The kind of event the metric tracks */
    @Json(name = "kind")
    val kind: MetricInGroupRep.Kind,

    /* The location and content type of related resources */
    @Json(name = "_links")
    val links: kotlin.collections.Map<kotlin.String, Link>,

    /* The version ID of the metric */
    @Json(name = "_versionId")
    val versionId: kotlin.String? = null,

    /* For custom metrics, whether to track numeric changes in value against a baseline (<code>true</code>) or to track a conversion when an end user takes an action (<code>false</code>). */
    @Json(name = "isNumeric")
    val isNumeric: kotlin.Boolean? = null,

    /* The type of unit aggregation to use for the metric */
    @Json(name = "unitAggregationType")
    val unitAggregationType: MetricInGroupRep.UnitAggregationType? = null,

    /* Name of the metric when used within the associated metric group. Can be different from the original name of the metric. Required if and only if the metric group is a <code>funnel</code>. */
    @Json(name = "nameInGroup")
    val nameInGroup: kotlin.String? = null,

    /* The randomization units for the metric */
    @Json(name = "randomizationUnits")
    val randomizationUnits: kotlin.collections.List<kotlin.String>? = null

) {

    /**
     * The kind of event the metric tracks
     *
     * Values: pageview,click,custom
     */
    @JsonClass(generateAdapter = false)
    enum class Kind(val value: kotlin.String) {
        @Json(name = "pageview") pageview("pageview"),
        @Json(name = "click") click("click"),
        @Json(name = "custom") custom("custom");
    }
    /**
     * The type of unit aggregation to use for the metric
     *
     * Values: sum,average
     */
    @JsonClass(generateAdapter = false)
    enum class UnitAggregationType(val value: kotlin.String) {
        @Json(name = "sum") sum("sum"),
        @Json(name = "average") average("average");
    }

}


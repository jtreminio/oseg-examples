/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param name A human-friendly name for the segment
 * @param key A unique key used to reference the segment
 * @param description A description of the segment's purpose
 * @param tags Tags for the segment
 * @param unbounded Whether to create a standard segment (<code>false</code>) or a big segment (<code>true</code>). Standard segments include rule-based and smaller list-based segments. Big segments include larger list-based segments and synced segments. Only use a big segment if you need to add more than 15,000 individual targets.
 * @param unboundedContextKind For big segments, the targeted context kind.
 */


data class SegmentBody (

    /* A human-friendly name for the segment */
    @Json(name = "name")
    val name: kotlin.String,

    /* A unique key used to reference the segment */
    @Json(name = "key")
    val key: kotlin.String,

    /* A description of the segment's purpose */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* Tags for the segment */
    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.String>? = null,

    /* Whether to create a standard segment (<code>false</code>) or a big segment (<code>true</code>). Standard segments include rule-based and smaller list-based segments. Big segments include larger list-based segments and synced segments. Only use a big segment if you need to add more than 15,000 individual targets. */
    @Json(name = "unbounded")
    val unbounded: kotlin.Boolean? = null,

    /* For big segments, the targeted context kind. */
    @Json(name = "unboundedContextKind")
    val unboundedContextKind: kotlin.String? = null

) {


}


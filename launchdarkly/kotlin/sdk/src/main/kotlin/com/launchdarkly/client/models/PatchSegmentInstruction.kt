/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param kind The type of change to make to the user's removal date from this segment
 * @param userKey A unique key used to represent the user
 * @param targetType The segment's target type
 * @param `value` The time, in Unix milliseconds, when the user should be removed from this segment. Required if <code>kind</code> is <code>addExpireUserTargetDate</code> or <code>updateExpireUserTargetDate</code>.
 * @param version The version of the segment to update. Required if <code>kind</code> is <code>updateExpireUserTargetDate</code>.
 */


data class PatchSegmentInstruction (

    /* The type of change to make to the user's removal date from this segment */
    @Json(name = "kind")
    val kind: PatchSegmentInstruction.Kind,

    /* A unique key used to represent the user */
    @Json(name = "userKey")
    val userKey: kotlin.String,

    /* The segment's target type */
    @Json(name = "targetType")
    val targetType: PatchSegmentInstruction.TargetType,

    /* The time, in Unix milliseconds, when the user should be removed from this segment. Required if <code>kind</code> is <code>addExpireUserTargetDate</code> or <code>updateExpireUserTargetDate</code>. */
    @Json(name = "value")
    val `value`: kotlin.Int? = null,

    /* The version of the segment to update. Required if <code>kind</code> is <code>updateExpireUserTargetDate</code>. */
    @Json(name = "version")
    val version: kotlin.Int? = null

) {

    /**
     * The type of change to make to the user's removal date from this segment
     *
     * Values: addExpireUserTargetDate,updateExpireUserTargetDate,removeExpireUserTargetDate
     */
    @JsonClass(generateAdapter = false)
    enum class Kind(val value: kotlin.String) {
        @Json(name = "addExpireUserTargetDate") addExpireUserTargetDate("addExpireUserTargetDate"),
        @Json(name = "updateExpireUserTargetDate") updateExpireUserTargetDate("updateExpireUserTargetDate"),
        @Json(name = "removeExpireUserTargetDate") removeExpireUserTargetDate("removeExpireUserTargetDate");
    }
    /**
     * The segment's target type
     *
     * Values: included,excluded
     */
    @JsonClass(generateAdapter = false)
    enum class TargetType(val value: kotlin.String) {
        @Json(name = "included") included("included"),
        @Json(name = "excluded") excluded("excluded");
    }

}


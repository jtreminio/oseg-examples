/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param key The user key. This is the only mandatory user attribute.
 * @param secondary If provided, used with the user key to generate a variation in percentage rollouts
 * @param ip The user's IP address
 * @param country The user's country
 * @param email The user's email
 * @param firstName The user's first name
 * @param lastName The user's last name
 * @param avatar An absolute URL to an avatar image.
 * @param name The user's full name
 * @param anonymous Whether the user is anonymous. If true, this user does not appear on the Contexts list in the LaunchDarkly user interface.
 * @param custom Any other custom attributes for this user. Custom attributes contain any other user data that you would like to use to conditionally target your users.
 * @param privateAttrs A list of attribute names that are marked as private. You can use these attributes in targeting rules and segments. If you are using a server-side SDK, the SDK will not send the private attribute back to LaunchDarkly. If you are using a client-side SDK, the SDK will send the private attribute back to LaunchDarkly for evaluation. However, the SDK won't send the attribute to LaunchDarkly in events data, LaunchDarkly won't store the private attribute, and the private attribute will not appear on the Contexts list.
 */


data class User (

    /* The user key. This is the only mandatory user attribute. */
    @Json(name = "key")
    val key: kotlin.String? = null,

    /* If provided, used with the user key to generate a variation in percentage rollouts */
    @Json(name = "secondary")
    val secondary: kotlin.String? = null,

    /* The user's IP address */
    @Json(name = "ip")
    val ip: kotlin.String? = null,

    /* The user's country */
    @Json(name = "country")
    val country: kotlin.String? = null,

    /* The user's email */
    @Json(name = "email")
    val email: kotlin.String? = null,

    /* The user's first name */
    @Json(name = "firstName")
    val firstName: kotlin.String? = null,

    /* The user's last name */
    @Json(name = "lastName")
    val lastName: kotlin.String? = null,

    /* An absolute URL to an avatar image. */
    @Json(name = "avatar")
    val avatar: kotlin.String? = null,

    /* The user's full name */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* Whether the user is anonymous. If true, this user does not appear on the Contexts list in the LaunchDarkly user interface. */
    @Json(name = "anonymous")
    val anonymous: kotlin.Boolean? = null,

    /* Any other custom attributes for this user. Custom attributes contain any other user data that you would like to use to conditionally target your users. */
    @Json(name = "custom")
    val custom: kotlin.collections.Map<kotlin.String, kotlin.Any>? = null,

    /* A list of attribute names that are marked as private. You can use these attributes in targeting rules and segments. If you are using a server-side SDK, the SDK will not send the private attribute back to LaunchDarkly. If you are using a client-side SDK, the SDK will send the private attribute back to LaunchDarkly for evaluation. However, the SDK won't send the attribute to LaunchDarkly in events data, LaunchDarkly won't store the private attribute, and the private attribute will not appear on the Contexts list. */
    @Json(name = "privateAttrs")
    val privateAttrs: kotlin.collections.List<kotlin.String>? = null

) {


}


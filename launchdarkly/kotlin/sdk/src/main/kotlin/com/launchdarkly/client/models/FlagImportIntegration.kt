/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models

import com.launchdarkly.client.models.Access
import com.launchdarkly.client.models.FlagImportIntegrationLinks
import com.launchdarkly.client.models.FlagImportStatus

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param links 
 * @param id The integration ID
 * @param integrationKey The integration key
 * @param projectKey The project key
 * @param config 
 * @param tags List of tags for this configuration
 * @param name Name of the configuration
 * @param version Version of the current configuration
 * @param status 
 * @param access 
 */


data class FlagImportIntegration (

    @Json(name = "_links")
    val links: FlagImportIntegrationLinks,

    /* The integration ID */
    @Json(name = "_id")
    val id: kotlin.String,

    /* The integration key */
    @Json(name = "integrationKey")
    val integrationKey: FlagImportIntegration.IntegrationKey,

    /* The project key */
    @Json(name = "projectKey")
    val projectKey: kotlin.String,

    @Json(name = "config")
    val config: kotlin.collections.Map<kotlin.String, kotlin.Any>,

    /* List of tags for this configuration */
    @Json(name = "tags")
    val tags: kotlin.collections.List<kotlin.String>,

    /* Name of the configuration */
    @Json(name = "name")
    val name: kotlin.String,

    /* Version of the current configuration */
    @Json(name = "version")
    val version: kotlin.Int,

    @Json(name = "_status")
    val status: FlagImportStatus,

    @Json(name = "_access")
    val access: Access? = null

) {

    /**
     * The integration key
     *
     * Values: split,unleash
     */
    @JsonClass(generateAdapter = false)
    enum class IntegrationKey(val value: kotlin.String) {
        @Json(name = "split") split("split"),
        @Json(name = "unleash") unleash("unleash");
    }

}


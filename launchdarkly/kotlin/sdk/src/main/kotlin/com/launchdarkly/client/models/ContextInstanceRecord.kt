/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models

import com.launchdarkly.client.models.Access
import com.launchdarkly.client.models.Link

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id The context instance ID
 * @param context The context, including its kind and attributes
 * @param lastSeen Timestamp of the last time an evaluation occurred for this context instance
 * @param applicationId An identifier representing the application where the LaunchDarkly SDK is running
 * @param anonymousKinds A list of the context kinds this context was associated with that the SDK removed because they were marked as anonymous at flag evaluation
 * @param links The location and content type of related resources
 * @param access 
 */


data class ContextInstanceRecord (

    /* The context instance ID */
    @Json(name = "id")
    val id: kotlin.String,

    /* The context, including its kind and attributes */
    @Json(name = "context")
    val context: kotlin.Any?,

    /* Timestamp of the last time an evaluation occurred for this context instance */
    @Json(name = "lastSeen")
    val lastSeen: java.time.OffsetDateTime? = null,

    /* An identifier representing the application where the LaunchDarkly SDK is running */
    @Json(name = "applicationId")
    val applicationId: kotlin.String? = null,

    /* A list of the context kinds this context was associated with that the SDK removed because they were marked as anonymous at flag evaluation */
    @Json(name = "anonymousKinds")
    val anonymousKinds: kotlin.collections.List<kotlin.String>? = null,

    /* The location and content type of related resources */
    @Json(name = "_links")
    val links: kotlin.collections.Map<kotlin.String, Link>? = null,

    @Json(name = "_access")
    val access: Access? = null

) {


}


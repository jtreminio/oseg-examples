/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models

import com.launchdarkly.client.models.ConflictOutput
import com.launchdarkly.client.models.ExecutionOutput
import com.launchdarkly.client.models.Link
import com.launchdarkly.client.models.StageOutput
import com.launchdarkly.client.models.WorkflowTemplateMetadata

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param id The ID of the workflow
 * @param version The version of the workflow
 * @param conflicts Any conflicts that are present in the workflow stages
 * @param creationDate 
 * @param maintainerId The member ID of the maintainer of the workflow. Defaults to the workflow creator.
 * @param links The location and content type of related resources
 * @param name The name of the workflow
 * @param execution 
 * @param description A brief description of the workflow
 * @param kind The kind of workflow
 * @param stages The stages that make up the workflow. Each stage contains conditions and actions.
 * @param meta 
 * @param templateKey For workflows being created from a workflow template, this value is the template's key
 */


data class CustomWorkflowOutput (

    /* The ID of the workflow */
    @Json(name = "_id")
    val id: kotlin.String,

    /* The version of the workflow */
    @Json(name = "_version")
    val version: kotlin.Int,

    /* Any conflicts that are present in the workflow stages */
    @Json(name = "_conflicts")
    val conflicts: kotlin.collections.List<ConflictOutput>,

    @Json(name = "_creationDate")
    val creationDate: kotlin.Long,

    /* The member ID of the maintainer of the workflow. Defaults to the workflow creator. */
    @Json(name = "_maintainerId")
    val maintainerId: kotlin.String,

    /* The location and content type of related resources */
    @Json(name = "_links")
    val links: kotlin.collections.Map<kotlin.String, Link>,

    /* The name of the workflow */
    @Json(name = "name")
    val name: kotlin.String,

    @Json(name = "_execution")
    val execution: ExecutionOutput,

    /* A brief description of the workflow */
    @Json(name = "description")
    val description: kotlin.String? = null,

    /* The kind of workflow */
    @Json(name = "kind")
    val kind: kotlin.String? = null,

    /* The stages that make up the workflow. Each stage contains conditions and actions. */
    @Json(name = "stages")
    val stages: kotlin.collections.List<StageOutput>? = null,

    @Json(name = "meta")
    val meta: WorkflowTemplateMetadata? = null,

    /* For workflows being created from a workflow template, this value is the template's key */
    @Json(name = "templateKey")
    val templateKey: kotlin.String? = null

) {


}


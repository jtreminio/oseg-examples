/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.apis

import java.io.IOException
import okhttp3.Call
import okhttp3.HttpUrl

import com.launchdarkly.client.models.FlagEventCollectionRep
import com.launchdarkly.client.models.ForbiddenErrorRep
import com.launchdarkly.client.models.NotFoundErrorRep
import com.launchdarkly.client.models.RateLimitedErrorRep
import com.launchdarkly.client.models.UnauthorizedErrorRep
import com.launchdarkly.client.models.ValidationFailedErrorRep

import com.squareup.moshi.Json

import com.launchdarkly.client.infrastructure.ApiClient
import com.launchdarkly.client.infrastructure.ApiResponse
import com.launchdarkly.client.infrastructure.ClientException
import com.launchdarkly.client.infrastructure.ClientError
import com.launchdarkly.client.infrastructure.ServerException
import com.launchdarkly.client.infrastructure.ServerError
import com.launchdarkly.client.infrastructure.MultiValueMap
import com.launchdarkly.client.infrastructure.PartConfig
import com.launchdarkly.client.infrastructure.RequestConfig
import com.launchdarkly.client.infrastructure.RequestMethod
import com.launchdarkly.client.infrastructure.ResponseType
import com.launchdarkly.client.infrastructure.Success
import com.launchdarkly.client.infrastructure.toMultiValue

class InsightsFlagEventsBetaApi(basePath: kotlin.String = defaultBasePath, client: Call.Factory = ApiClient.defaultClient) : ApiClient(basePath, client) {
    companion object {
        @JvmStatic
        val defaultBasePath: String by lazy {
            System.getProperties().getProperty(ApiClient.baseUrlKey, "https://app.launchdarkly.com")
        }
    }

    /**
     * List flag events
     * Get a list of flag events  ### Expanding the flag event collection response  LaunchDarkly supports expanding the flag event collection response to include additional fields.  To expand the response, append the &#x60;expand&#x60; query parameter and include the following:  * &#x60;experiments&#x60; includes details on all of the experiments run on each flag  For example, use &#x60;?expand&#x3D;experiments&#x60; to include the &#x60;experiments&#x60; field in the response. By default, this field is **not** included in the response. 
     * @param projectKey The project key
     * @param environmentKey The environment key
     * @param applicationKey Comma separated list of application keys (optional)
     * @param query Filter events by flag key (optional)
     * @param impactSize Filter events by impact size. A small impact created a less than 20% change in the proportion of end users receiving one or more flag variations. A medium impact created between a 20%-80% change. A large impact created a more than 80% change. Options: &#x60;none&#x60;, &#x60;small&#x60;, &#x60;medium&#x60;, &#x60;large&#x60; (optional)
     * @param hasExperiments Filter events to those associated with an experiment (&#x60;true&#x60;) or without an experiment (&#x60;false&#x60;) (optional)
     * @param global Filter to include or exclude global events. Default value is &#x60;include&#x60;. Options: &#x60;include&#x60;, &#x60;exclude&#x60; (optional)
     * @param expand Expand properties in response. Options: &#x60;experiments&#x60; (optional)
     * @param limit The number of deployments to return. Default is 20. Maximum allowed is 100. (optional)
     * @param from Unix timestamp in milliseconds. Default value is 7 days ago. (optional)
     * @param to Unix timestamp in milliseconds. Default value is now. (optional)
     * @param after Identifier used for pagination (optional)
     * @param before Identifier used for pagination (optional)
     * @return FlagEventCollectionRep
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     * @throws UnsupportedOperationException If the API returns an informational or redirection response
     * @throws ClientException If the API returns a client error response
     * @throws ServerException If the API returns a server error response
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class, UnsupportedOperationException::class, ClientException::class, ServerException::class)
    fun getFlagEvents(projectKey: kotlin.String, environmentKey: kotlin.String, applicationKey: kotlin.String? = null, query: kotlin.String? = null, impactSize: kotlin.String? = null, hasExperiments: kotlin.Boolean? = null, global: kotlin.String? = null, expand: kotlin.String? = null, limit: kotlin.Long? = null, from: kotlin.Long? = null, to: kotlin.Long? = null, after: kotlin.String? = null, before: kotlin.String? = null) : FlagEventCollectionRep {
        val localVarResponse = getFlagEventsWithHttpInfo(projectKey = projectKey, environmentKey = environmentKey, applicationKey = applicationKey, query = query, impactSize = impactSize, hasExperiments = hasExperiments, global = global, expand = expand, limit = limit, from = from, to = to, after = after, before = before)

        return when (localVarResponse.responseType) {
            ResponseType.Success -> (localVarResponse as Success<*>).data as FlagEventCollectionRep
            ResponseType.Informational -> throw UnsupportedOperationException("Client does not support Informational responses.")
            ResponseType.Redirection -> throw UnsupportedOperationException("Client does not support Redirection responses.")
            ResponseType.ClientError -> {
                val localVarError = localVarResponse as ClientError<*>
                throw ClientException("Client error : ${localVarError.statusCode} ${localVarError.message.orEmpty()}", localVarError.statusCode, localVarResponse)
            }
            ResponseType.ServerError -> {
                val localVarError = localVarResponse as ServerError<*>
                throw ServerException("Server error : ${localVarError.statusCode} ${localVarError.message.orEmpty()} ${localVarError.body}", localVarError.statusCode, localVarResponse)
            }
        }
    }

    /**
     * List flag events
     * Get a list of flag events  ### Expanding the flag event collection response  LaunchDarkly supports expanding the flag event collection response to include additional fields.  To expand the response, append the &#x60;expand&#x60; query parameter and include the following:  * &#x60;experiments&#x60; includes details on all of the experiments run on each flag  For example, use &#x60;?expand&#x3D;experiments&#x60; to include the &#x60;experiments&#x60; field in the response. By default, this field is **not** included in the response. 
     * @param projectKey The project key
     * @param environmentKey The environment key
     * @param applicationKey Comma separated list of application keys (optional)
     * @param query Filter events by flag key (optional)
     * @param impactSize Filter events by impact size. A small impact created a less than 20% change in the proportion of end users receiving one or more flag variations. A medium impact created between a 20%-80% change. A large impact created a more than 80% change. Options: &#x60;none&#x60;, &#x60;small&#x60;, &#x60;medium&#x60;, &#x60;large&#x60; (optional)
     * @param hasExperiments Filter events to those associated with an experiment (&#x60;true&#x60;) or without an experiment (&#x60;false&#x60;) (optional)
     * @param global Filter to include or exclude global events. Default value is &#x60;include&#x60;. Options: &#x60;include&#x60;, &#x60;exclude&#x60; (optional)
     * @param expand Expand properties in response. Options: &#x60;experiments&#x60; (optional)
     * @param limit The number of deployments to return. Default is 20. Maximum allowed is 100. (optional)
     * @param from Unix timestamp in milliseconds. Default value is 7 days ago. (optional)
     * @param to Unix timestamp in milliseconds. Default value is now. (optional)
     * @param after Identifier used for pagination (optional)
     * @param before Identifier used for pagination (optional)
     * @return ApiResponse<FlagEventCollectionRep?>
     * @throws IllegalStateException If the request is not correctly configured
     * @throws IOException Rethrows the OkHttp execute method exception
     */
    @Suppress("UNCHECKED_CAST")
    @Throws(IllegalStateException::class, IOException::class)
    fun getFlagEventsWithHttpInfo(projectKey: kotlin.String, environmentKey: kotlin.String, applicationKey: kotlin.String?, query: kotlin.String?, impactSize: kotlin.String?, hasExperiments: kotlin.Boolean?, global: kotlin.String?, expand: kotlin.String?, limit: kotlin.Long?, from: kotlin.Long?, to: kotlin.Long?, after: kotlin.String?, before: kotlin.String?) : ApiResponse<FlagEventCollectionRep?> {
        val localVariableConfig = getFlagEventsRequestConfig(projectKey = projectKey, environmentKey = environmentKey, applicationKey = applicationKey, query = query, impactSize = impactSize, hasExperiments = hasExperiments, global = global, expand = expand, limit = limit, from = from, to = to, after = after, before = before)

        return request<Unit, FlagEventCollectionRep>(
            localVariableConfig
        )
    }

    /**
     * To obtain the request config of the operation getFlagEvents
     *
     * @param projectKey The project key
     * @param environmentKey The environment key
     * @param applicationKey Comma separated list of application keys (optional)
     * @param query Filter events by flag key (optional)
     * @param impactSize Filter events by impact size. A small impact created a less than 20% change in the proportion of end users receiving one or more flag variations. A medium impact created between a 20%-80% change. A large impact created a more than 80% change. Options: &#x60;none&#x60;, &#x60;small&#x60;, &#x60;medium&#x60;, &#x60;large&#x60; (optional)
     * @param hasExperiments Filter events to those associated with an experiment (&#x60;true&#x60;) or without an experiment (&#x60;false&#x60;) (optional)
     * @param global Filter to include or exclude global events. Default value is &#x60;include&#x60;. Options: &#x60;include&#x60;, &#x60;exclude&#x60; (optional)
     * @param expand Expand properties in response. Options: &#x60;experiments&#x60; (optional)
     * @param limit The number of deployments to return. Default is 20. Maximum allowed is 100. (optional)
     * @param from Unix timestamp in milliseconds. Default value is 7 days ago. (optional)
     * @param to Unix timestamp in milliseconds. Default value is now. (optional)
     * @param after Identifier used for pagination (optional)
     * @param before Identifier used for pagination (optional)
     * @return RequestConfig
     */
    fun getFlagEventsRequestConfig(projectKey: kotlin.String, environmentKey: kotlin.String, applicationKey: kotlin.String?, query: kotlin.String?, impactSize: kotlin.String?, hasExperiments: kotlin.Boolean?, global: kotlin.String?, expand: kotlin.String?, limit: kotlin.Long?, from: kotlin.Long?, to: kotlin.Long?, after: kotlin.String?, before: kotlin.String?) : RequestConfig<Unit> {
        val localVariableBody = null
        val localVariableQuery: MultiValueMap = mutableMapOf<kotlin.String, kotlin.collections.List<kotlin.String>>()
            .apply {
                put("projectKey", listOf(projectKey.toString()))
                put("environmentKey", listOf(environmentKey.toString()))
                if (applicationKey != null) {
                    put("applicationKey", listOf(applicationKey.toString()))
                }
                if (query != null) {
                    put("query", listOf(query.toString()))
                }
                if (impactSize != null) {
                    put("impactSize", listOf(impactSize.toString()))
                }
                if (hasExperiments != null) {
                    put("hasExperiments", listOf(hasExperiments.toString()))
                }
                if (global != null) {
                    put("global", listOf(global.toString()))
                }
                if (expand != null) {
                    put("expand", listOf(expand.toString()))
                }
                if (limit != null) {
                    put("limit", listOf(limit.toString()))
                }
                if (from != null) {
                    put("from", listOf(from.toString()))
                }
                if (to != null) {
                    put("to", listOf(to.toString()))
                }
                if (after != null) {
                    put("after", listOf(after.toString()))
                }
                if (before != null) {
                    put("before", listOf(before.toString()))
                }
            }
        val localVariableHeaders: MutableMap<String, String> = mutableMapOf()
        localVariableHeaders["Accept"] = "application/json"

        return RequestConfig(
            method = RequestMethod.GET,
            path = "/api/v2/engineering-insights/flag-events",
            query = localVariableQuery,
            headers = localVariableHeaders,
            requiresAuthentication = true,
            body = localVariableBody
        )
    }


    private fun encodeURIComponent(uriComponent: kotlin.String): kotlin.String =
        HttpUrl.Builder().scheme("http").host("localhost").addPathSegment(uriComponent).build().encodedPathSegments[0]
}

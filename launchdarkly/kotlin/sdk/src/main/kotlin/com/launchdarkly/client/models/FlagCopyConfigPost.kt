/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models

import com.launchdarkly.client.models.FlagCopyConfigEnvironment

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param source 
 * @param target 
 * @param comment Optional comment
 * @param includedActions Optional list of the flag changes to copy from the source environment to the target environment. You may include either <code>includedActions</code> or <code>excludedActions</code>, but not both. If you include neither, then all flag changes will be copied.
 * @param excludedActions Optional list of the flag changes NOT to copy from the source environment to the target environment. You may include either  <code>includedActions</code> or <code>excludedActions</code>, but not both. If you include neither, then all flag changes will be copied.
 */


data class FlagCopyConfigPost (

    @Json(name = "source")
    val source: FlagCopyConfigEnvironment,

    @Json(name = "target")
    val target: FlagCopyConfigEnvironment,

    /* Optional comment */
    @Json(name = "comment")
    val comment: kotlin.String? = null,

    /* Optional list of the flag changes to copy from the source environment to the target environment. You may include either <code>includedActions</code> or <code>excludedActions</code>, but not both. If you include neither, then all flag changes will be copied. */
    @Json(name = "includedActions")
    val includedActions: kotlin.collections.List<FlagCopyConfigPost.IncludedActions>? = null,

    /* Optional list of the flag changes NOT to copy from the source environment to the target environment. You may include either  <code>includedActions</code> or <code>excludedActions</code>, but not both. If you include neither, then all flag changes will be copied. */
    @Json(name = "excludedActions")
    val excludedActions: kotlin.collections.List<FlagCopyConfigPost.ExcludedActions>? = null

) {

    /**
     * Optional list of the flag changes to copy from the source environment to the target environment. You may include either <code>includedActions</code> or <code>excludedActions</code>, but not both. If you include neither, then all flag changes will be copied.
     *
     * Values: updateOn,updateRules,updateFallthrough,updateOffVariation,updatePrerequisites,updateTargets,updateFlagConfigMigrationSettings
     */
    @JsonClass(generateAdapter = false)
    enum class IncludedActions(val value: kotlin.String) {
        @Json(name = "updateOn") updateOn("updateOn"),
        @Json(name = "updateRules") updateRules("updateRules"),
        @Json(name = "updateFallthrough") updateFallthrough("updateFallthrough"),
        @Json(name = "updateOffVariation") updateOffVariation("updateOffVariation"),
        @Json(name = "updatePrerequisites") updatePrerequisites("updatePrerequisites"),
        @Json(name = "updateTargets") updateTargets("updateTargets"),
        @Json(name = "updateFlagConfigMigrationSettings") updateFlagConfigMigrationSettings("updateFlagConfigMigrationSettings");
    }
    /**
     * Optional list of the flag changes NOT to copy from the source environment to the target environment. You may include either  <code>includedActions</code> or <code>excludedActions</code>, but not both. If you include neither, then all flag changes will be copied.
     *
     * Values: updateOn,updateRules,updateFallthrough,updateOffVariation,updatePrerequisites,updateTargets,updateFlagConfigMigrationSettings
     */
    @JsonClass(generateAdapter = false)
    enum class ExcludedActions(val value: kotlin.String) {
        @Json(name = "updateOn") updateOn("updateOn"),
        @Json(name = "updateRules") updateRules("updateRules"),
        @Json(name = "updateFallthrough") updateFallthrough("updateFallthrough"),
        @Json(name = "updateOffVariation") updateOffVariation("updateOffVariation"),
        @Json(name = "updatePrerequisites") updatePrerequisites("updatePrerequisites"),
        @Json(name = "updateTargets") updateTargets("updateTargets"),
        @Json(name = "updateFlagConfigMigrationSettings") updateFlagConfigMigrationSettings("updateFlagConfigMigrationSettings");
    }

}


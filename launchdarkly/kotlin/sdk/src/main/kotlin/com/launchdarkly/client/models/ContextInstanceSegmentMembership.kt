/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models

import com.launchdarkly.client.models.Link

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param name A human-friendly name for the segment
 * @param key A unique key used to reference the segment
 * @param description A description of the segment's purpose
 * @param unbounded Whether this is an unbounded segment. Unbounded segments, also called big segments, may be list-based segments with more than 15,000 entries, or synced segments.
 * @param `external` If the segment is a synced segment, the name of the external source
 * @param isMember Whether the context is a member of this segment, either by explicit inclusion or by rule matching
 * @param isIndividuallyTargeted Whether the context is explicitly included in this segment
 * @param isRuleTargeted Whether the context is captured by this segment's rules. The value of this field is undefined if the context is also explicitly included (<code>isIndividuallyTargeted</code> is <code>true</code>).
 * @param links The location and content type of related resources
 */


data class ContextInstanceSegmentMembership (

    /* A human-friendly name for the segment */
    @Json(name = "name")
    val name: kotlin.String,

    /* A unique key used to reference the segment */
    @Json(name = "key")
    val key: kotlin.String,

    /* A description of the segment's purpose */
    @Json(name = "description")
    val description: kotlin.String,

    /* Whether this is an unbounded segment. Unbounded segments, also called big segments, may be list-based segments with more than 15,000 entries, or synced segments. */
    @Json(name = "unbounded")
    val unbounded: kotlin.Boolean,

    /* If the segment is a synced segment, the name of the external source */
    @Json(name = "external")
    val `external`: kotlin.String,

    /* Whether the context is a member of this segment, either by explicit inclusion or by rule matching */
    @Json(name = "isMember")
    val isMember: kotlin.Boolean,

    /* Whether the context is explicitly included in this segment */
    @Json(name = "isIndividuallyTargeted")
    val isIndividuallyTargeted: kotlin.Boolean,

    /* Whether the context is captured by this segment's rules. The value of this field is undefined if the context is also explicitly included (<code>isIndividuallyTargeted</code> is <code>true</code>). */
    @Json(name = "isRuleTargeted")
    val isRuleTargeted: kotlin.Boolean,

    /* The location and content type of related resources */
    @Json(name = "_links")
    val links: kotlin.collections.Map<kotlin.String, Link>

) {


}


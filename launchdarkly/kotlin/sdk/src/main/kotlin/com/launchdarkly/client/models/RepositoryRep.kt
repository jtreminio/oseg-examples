/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models

import com.launchdarkly.client.models.Access
import com.launchdarkly.client.models.BranchRep

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param name The repository name
 * @param type The type of repository
 * @param defaultBranch The repository's default branch
 * @param enabled Whether or not a repository is enabled for code reference scanning
 * @param version The version of the repository's saved information
 * @param links 
 * @param sourceLink A URL to access the repository
 * @param commitUrlTemplate A template for constructing a valid URL to view the commit
 * @param hunkUrlTemplate A template for constructing a valid URL to view the hunk
 * @param branches An array of the repository's branches that have been scanned for code references
 * @param access 
 */


data class RepositoryRep (

    /* The repository name */
    @Json(name = "name")
    val name: kotlin.String,

    /* The type of repository */
    @Json(name = "type")
    val type: RepositoryRep.Type,

    /* The repository's default branch */
    @Json(name = "defaultBranch")
    val defaultBranch: kotlin.String,

    /* Whether or not a repository is enabled for code reference scanning */
    @Json(name = "enabled")
    val enabled: kotlin.Boolean,

    /* The version of the repository's saved information */
    @Json(name = "version")
    val version: kotlin.Int,

    @Json(name = "_links")
    val links: kotlin.collections.Map<kotlin.String, kotlin.Any>,

    /* A URL to access the repository */
    @Json(name = "sourceLink")
    val sourceLink: kotlin.String? = null,

    /* A template for constructing a valid URL to view the commit */
    @Json(name = "commitUrlTemplate")
    val commitUrlTemplate: kotlin.String? = null,

    /* A template for constructing a valid URL to view the hunk */
    @Json(name = "hunkUrlTemplate")
    val hunkUrlTemplate: kotlin.String? = null,

    /* An array of the repository's branches that have been scanned for code references */
    @Json(name = "branches")
    val branches: kotlin.collections.List<BranchRep>? = null,

    @Json(name = "_access")
    val access: Access? = null

) {

    /**
     * The type of repository
     *
     * Values: bitbucket,custom,github,gitlab
     */
    @JsonClass(generateAdapter = false)
    enum class Type(val value: kotlin.String) {
        @Json(name = "bitbucket") bitbucket("bitbucket"),
        @Json(name = "custom") custom("custom"),
        @Json(name = "github") github("github"),
        @Json(name = "gitlab") gitlab("gitlab");
    }

}


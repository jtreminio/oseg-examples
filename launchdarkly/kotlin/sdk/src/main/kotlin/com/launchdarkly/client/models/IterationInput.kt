/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models

import com.launchdarkly.client.models.FlagInput
import com.launchdarkly.client.models.MetricInput
import com.launchdarkly.client.models.TreatmentInput

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param hypothesis The expected outcome of this experiment
 * @param metrics 
 * @param treatments 
 * @param flags 
 * @param canReshuffleTraffic Whether to allow the experiment to reassign traffic to different variations when you increase or decrease the traffic in your experiment audience (true) or keep all traffic assigned to its initial variation (false). Defaults to true.
 * @param primarySingleMetricKey The key of the primary metric for this experiment. Either <code>primarySingleMetricKey</code> or <code>primaryFunnelKey</code> must be present.
 * @param primaryFunnelKey The key of the primary funnel group for this experiment. Either <code>primarySingleMetricKey</code> or <code>primaryFunnelKey</code> must be present.
 * @param randomizationUnit The unit of randomization for this iteration. Defaults to user.
 * @param attributes The attributes that this iteration's results can be sliced by
 */


data class IterationInput (

    /* The expected outcome of this experiment */
    @Json(name = "hypothesis")
    val hypothesis: kotlin.String,

    @Json(name = "metrics")
    val metrics: kotlin.collections.List<MetricInput>,

    @Json(name = "treatments")
    val treatments: kotlin.collections.List<TreatmentInput>,

    @Json(name = "flags")
    val flags: kotlin.collections.Map<kotlin.String, FlagInput>,

    /* Whether to allow the experiment to reassign traffic to different variations when you increase or decrease the traffic in your experiment audience (true) or keep all traffic assigned to its initial variation (false). Defaults to true. */
    @Json(name = "canReshuffleTraffic")
    val canReshuffleTraffic: kotlin.Boolean? = null,

    /* The key of the primary metric for this experiment. Either <code>primarySingleMetricKey</code> or <code>primaryFunnelKey</code> must be present. */
    @Json(name = "primarySingleMetricKey")
    val primarySingleMetricKey: kotlin.String? = null,

    /* The key of the primary funnel group for this experiment. Either <code>primarySingleMetricKey</code> or <code>primaryFunnelKey</code> must be present. */
    @Json(name = "primaryFunnelKey")
    val primaryFunnelKey: kotlin.String? = null,

    /* The unit of randomization for this iteration. Defaults to user. */
    @Json(name = "randomizationUnit")
    val randomizationUnit: kotlin.String? = null,

    /* The attributes that this iteration's results can be sliced by */
    @Json(name = "attributes")
    val attributes: kotlin.collections.List<kotlin.String>? = null

) {


}


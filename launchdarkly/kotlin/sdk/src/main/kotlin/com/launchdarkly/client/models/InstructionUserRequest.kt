/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package com.launchdarkly.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param kind The type of change to make to the removal date for this user from individual targeting for this flag.
 * @param flagKey The flag key
 * @param variationId ID of a variation on the flag
 * @param `value` The time, in Unix milliseconds, when LaunchDarkly should remove the user from individual targeting for this flag. Required if <code>kind</code> is <code>addExpireUserTargetDate</code> or <code>updateExpireUserTargetDate</code>.
 * @param version The version of the expiring user target to update. Optional and only used if <code>kind</code> is <code>updateExpireUserTargetDate</code>. If included, update will fail if version doesn't match current version of the expiring user target.
 */


data class InstructionUserRequest (

    /* The type of change to make to the removal date for this user from individual targeting for this flag. */
    @Json(name = "kind")
    val kind: InstructionUserRequest.Kind,

    /* The flag key */
    @Json(name = "flagKey")
    val flagKey: kotlin.String,

    /* ID of a variation on the flag */
    @Json(name = "variationId")
    val variationId: kotlin.String,

    /* The time, in Unix milliseconds, when LaunchDarkly should remove the user from individual targeting for this flag. Required if <code>kind</code> is <code>addExpireUserTargetDate</code> or <code>updateExpireUserTargetDate</code>. */
    @Json(name = "value")
    val `value`: kotlin.Int? = null,

    /* The version of the expiring user target to update. Optional and only used if <code>kind</code> is <code>updateExpireUserTargetDate</code>. If included, update will fail if version doesn't match current version of the expiring user target. */
    @Json(name = "version")
    val version: kotlin.Int? = null

) {

    /**
     * The type of change to make to the removal date for this user from individual targeting for this flag.
     *
     * Values: addExpireUserTargetDate,updateExpireUserTargetDate,removeExpireUserTargetDate
     */
    @JsonClass(generateAdapter = false)
    enum class Kind(val value: kotlin.String) {
        @Json(name = "addExpireUserTargetDate") addExpireUserTargetDate("addExpireUserTargetDate"),
        @Json(name = "updateExpireUserTargetDate") updateExpireUserTargetDate("updateExpireUserTargetDate"),
        @Json(name = "removeExpireUserTargetDate") removeExpireUserTargetDate("removeExpireUserTargetDate");
    }

}


/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package app.namsor.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.
 *
 * @param script 
 * @param id 
 * @param explanation 
 * @param firstName The first name (also known as given name)
 * @param lastName The last name (also known as family name, or surname)
 * @param internationalPhoneNumberVerified The normalized phone number, verified using libphonenumber.
 * @param phoneCountryIso2Verified The phone ISO2 country code, verified using libphonenumber.
 * @param phoneCountryCode The phone country code of the phone number, verified using libphonenumber.
 * @param phoneCountryCodeAlt The best alternative phone country code of the phone number.
 * @param phoneCountryIso2 The likely country of the phone number.
 * @param phoneCountryIso2Alt The best alternative country of the phone number.
 * @param originCountryIso2 The likely country of origin of the name.
 * @param originCountryIso2Alt The best alternative country of origin of the name.
 * @param phoneNumber The input phone number.
 * @param verified Indicates if the phone number could be positively verified using libphonenumber.
 * @param score Higher score is better, but score is not normalized. Use calibratedProbability if available. 
 * @param countryIso2 
 */


data class FirstLastNamePhoneCodedOut (

    @Json(name = "script")
    val script: kotlin.String? = null,

    @Json(name = "id")
    val id: kotlin.String? = null,

    @Json(name = "explanation")
    val explanation: kotlin.String? = null,

    /* The first name (also known as given name) */
    @Json(name = "firstName")
    val firstName: kotlin.String? = null,

    /* The last name (also known as family name, or surname) */
    @Json(name = "lastName")
    val lastName: kotlin.String? = null,

    /* The normalized phone number, verified using libphonenumber. */
    @Json(name = "internationalPhoneNumberVerified")
    val internationalPhoneNumberVerified: kotlin.String? = null,

    /* The phone ISO2 country code, verified using libphonenumber. */
    @Json(name = "phoneCountryIso2Verified")
    val phoneCountryIso2Verified: kotlin.String? = null,

    /* The phone country code of the phone number, verified using libphonenumber. */
    @Json(name = "phoneCountryCode")
    val phoneCountryCode: kotlin.Int? = null,

    /* The best alternative phone country code of the phone number. */
    @Json(name = "phoneCountryCodeAlt")
    val phoneCountryCodeAlt: kotlin.Int? = null,

    /* The likely country of the phone number. */
    @Json(name = "phoneCountryIso2")
    val phoneCountryIso2: kotlin.String? = null,

    /* The best alternative country of the phone number. */
    @Json(name = "phoneCountryIso2Alt")
    val phoneCountryIso2Alt: kotlin.String? = null,

    /* The likely country of origin of the name. */
    @Json(name = "originCountryIso2")
    val originCountryIso2: kotlin.String? = null,

    /* The best alternative country of origin of the name. */
    @Json(name = "originCountryIso2Alt")
    val originCountryIso2Alt: kotlin.String? = null,

    /* The input phone number. */
    @Json(name = "phoneNumber")
    val phoneNumber: kotlin.String? = null,

    /* Indicates if the phone number could be positively verified using libphonenumber. */
    @Json(name = "verified")
    val verified: kotlin.Boolean? = null,

    /* Higher score is better, but score is not normalized. Use calibratedProbability if available.  */
    @Json(name = "score")
    val score: kotlin.Double? = null,

    @Json(name = "countryIso2")
    val countryIso2: kotlin.String? = null

) {


}


/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package app.namsor.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * religious-coded names
 *
 * @param script 
 * @param id 
 * @param explanation 
 * @param name The input name.
 * @param score Higher score is better, but score is not normalized. Use calibratedProbability if available. 
 * @param religion Most likely religion
 * @param religionAlt Second best alternative : religion 
 * @param religionsTop List religions (top 10)
 * @param probabilityCalibrated The calibrated probability for country to have been guessed correctly. -1 = still calibrating. 
 * @param probabilityAltCalibrated The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. 
 */


data class PersonalNameReligionedOut (

    @Json(name = "script")
    val script: kotlin.String? = null,

    @Json(name = "id")
    val id: kotlin.String? = null,

    @Json(name = "explanation")
    val explanation: kotlin.String? = null,

    /* The input name. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* Higher score is better, but score is not normalized. Use calibratedProbability if available.  */
    @Json(name = "score")
    val score: kotlin.Double? = null,

    /* Most likely religion */
    @Json(name = "religion")
    val religion: kotlin.String? = null,

    /* Second best alternative : religion  */
    @Json(name = "religionAlt")
    val religionAlt: kotlin.String? = null,

    /* List religions (top 10) */
    @Json(name = "religionsTop")
    val religionsTop: kotlin.collections.List<kotlin.String>? = null,

    /* The calibrated probability for country to have been guessed correctly. -1 = still calibrating.  */
    @Json(name = "probabilityCalibrated")
    val probabilityCalibrated: kotlin.Double? = null,

    /* The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating.  */
    @Json(name = "probabilityAltCalibrated")
    val probabilityAltCalibrated: kotlin.Double? = null

) {


}


/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package app.namsor.client.models


import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Represents the output of inferring the LIKELY US 'race/ethnicity' from a personal name, given US country of residence and (optionally) a ZIP5 code.
 *
 * @param script 
 * @param id 
 * @param explanation 
 * @param name The input name.
 * @param raceEthnicityAlt Second most likely US 'race'/ethnicity
 * @param raceEthnicity Most likely US 'race'/ethnicity
 * @param score Higher score is better, but score is not normalized. Use calibratedProbability if available. 
 * @param raceEthnicitiesTop List 'race'/ethnicities
 * @param probabilityCalibrated The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating. 
 * @param probabilityAltCalibrated The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating. 
 */


data class PersonalNameUSRaceEthnicityOut (

    @Json(name = "script")
    val script: kotlin.String? = null,

    @Json(name = "id")
    val id: kotlin.String? = null,

    @Json(name = "explanation")
    val explanation: kotlin.String? = null,

    /* The input name. */
    @Json(name = "name")
    val name: kotlin.String? = null,

    /* Second most likely US 'race'/ethnicity */
    @Json(name = "raceEthnicityAlt")
    val raceEthnicityAlt: PersonalNameUSRaceEthnicityOut.RaceEthnicityAlt? = null,

    /* Most likely US 'race'/ethnicity */
    @Json(name = "raceEthnicity")
    val raceEthnicity: PersonalNameUSRaceEthnicityOut.RaceEthnicity? = null,

    /* Higher score is better, but score is not normalized. Use calibratedProbability if available.  */
    @Json(name = "score")
    val score: kotlin.Double? = null,

    /* List 'race'/ethnicities */
    @Json(name = "raceEthnicitiesTop")
    val raceEthnicitiesTop: kotlin.collections.List<kotlin.String>? = null,

    /* The calibrated probability for raceEthnicity to have been guessed correctly. -1 = still calibrating.  */
    @Json(name = "probabilityCalibrated")
    val probabilityCalibrated: kotlin.Double? = null,

    /* The calibrated probability for raceEthnicity OR raceEthnicityAlt to have been guessed correctly. -1 = still calibrating.  */
    @Json(name = "probabilityAltCalibrated")
    val probabilityAltCalibrated: kotlin.Double? = null

) {

    /**
     * Second most likely US 'race'/ethnicity
     *
     * Values: W_NL,HL,A,B_NL,AI_AN,PI
     */
    @JsonClass(generateAdapter = false)
    enum class RaceEthnicityAlt(val value: kotlin.String) {
        @Json(name = "W_NL") W_NL("W_NL"),
        @Json(name = "HL") HL("HL"),
        @Json(name = "A") A("A"),
        @Json(name = "B_NL") B_NL("B_NL"),
        @Json(name = "AI_AN") AI_AN("AI_AN"),
        @Json(name = "PI") PI("PI");
    }
    /**
     * Most likely US 'race'/ethnicity
     *
     * Values: W_NL,HL,A,B_NL,AI_AN,PI
     */
    @JsonClass(generateAdapter = false)
    enum class RaceEthnicity(val value: kotlin.String) {
        @Json(name = "W_NL") W_NL("W_NL"),
        @Json(name = "HL") HL("HL"),
        @Json(name = "A") A("A"),
        @Json(name = "B_NL") B_NL("B_NL"),
        @Json(name = "AI_AN") AI_AN("AI_AN"),
        @Json(name = "PI") PI("PI");
    }

}


/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package app.namsor.client.models

import app.namsor.client.models.CommunityEngageOptionOut

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param apiKey The user API Key.
 * @param userId The user identifier.
 * @param admin The API Key has admin role.
 * @param vetted The API Key is vetted (assumed truthful) for machine learning.
 * @param learnable The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
 * @param anonymized The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed).
 * @param partner The API Key has partner role.
 * @param striped The API Key is associated to a valid Stripe account.
 * @param corporate The API Key has role corporate (ex SWIFT payments instead of Stripe payments).
 * @param disabled The API Key is temporarily or permanently disabled.
 * @param explainable The API Key supports the AI explainability option (may require a specific license).
 * @param ipAddress 
 * @param communityEngageOption 
 */


data class APIKeyOut (

    /* The user API Key. */
    @Json(name = "apiKey")
    val apiKey: kotlin.String? = null,

    /* The user identifier. */
    @Json(name = "userId")
    val userId: kotlin.String? = null,

    /* The API Key has admin role. */
    @Json(name = "admin")
    val admin: kotlin.Boolean? = null,

    /* The API Key is vetted (assumed truthful) for machine learning. */
    @Json(name = "vetted")
    val vetted: kotlin.Boolean? = null,

    /* The API Key is learnable (without assuming truthfulness) for machine learning. Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed). */
    @Json(name = "learnable")
    val learnable: kotlin.Boolean? = null,

    /* The API Key is anonymized (using SHA-252 digest for logging). Set learnable=false and anonymized=true for highest privacy (ie. to forget data as it's processed). */
    @Json(name = "anonymized")
    val anonymized: kotlin.Boolean? = null,

    /* The API Key has partner role. */
    @Json(name = "partner")
    val partner: kotlin.Boolean? = null,

    /* The API Key is associated to a valid Stripe account. */
    @Json(name = "striped")
    val striped: kotlin.Boolean? = null,

    /* The API Key has role corporate (ex SWIFT payments instead of Stripe payments). */
    @Json(name = "corporate")
    val corporate: kotlin.Boolean? = null,

    /* The API Key is temporarily or permanently disabled. */
    @Json(name = "disabled")
    val disabled: kotlin.Boolean? = null,

    /* The API Key supports the AI explainability option (may require a specific license). */
    @Json(name = "explainable")
    val explainable: kotlin.Boolean? = null,

    @Json(name = "ipAddress")
    val ipAddress: kotlin.String? = null,

    @Json(name = "communityEngageOption")
    val communityEngageOption: CommunityEngageOptionOut? = null

) {


}


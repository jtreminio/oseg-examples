/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can\'t find here? We have many more features coming soon. Let us know, we\'ll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.29
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Represents the output of inferring the LIKELY country and phone code from a personal name and phone number.
*/
export class FirstLastNamePhoneCodedOut {
    'script'?: string;
    'id'?: string;
    'explanation'?: string;
    /**
    * The first name (also known as given name)
    */
    'firstName'?: string;
    /**
    * The last name (also known as family name, or surname)
    */
    'lastName'?: string;
    /**
    * The normalized phone number, verified using libphonenumber.
    */
    'internationalPhoneNumberVerified'?: string;
    /**
    * The phone ISO2 country code, verified using libphonenumber.
    */
    'phoneCountryIso2Verified'?: string;
    /**
    * The phone country code of the phone number, verified using libphonenumber.
    */
    'phoneCountryCode'?: number;
    /**
    * The best alternative phone country code of the phone number.
    */
    'phoneCountryCodeAlt'?: number;
    /**
    * The likely country of the phone number.
    */
    'phoneCountryIso2'?: string;
    /**
    * The best alternative country of the phone number.
    */
    'phoneCountryIso2Alt'?: string;
    /**
    * The likely country of origin of the name.
    */
    'originCountryIso2'?: string;
    /**
    * The best alternative country of origin of the name.
    */
    'originCountryIso2Alt'?: string;
    /**
    * The input phone number.
    */
    'phoneNumber'?: string;
    /**
    * Indicates if the phone number could be positively verified using libphonenumber.
    */
    'verified'?: boolean;
    /**
    * Higher score is better, but score is not normalized. Use calibratedProbability if available. 
    */
    'score'?: number;
    'countryIso2'?: string;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "script",
            "baseName": "script",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "explanation",
            "baseName": "explanation",
            "type": "string"
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string"
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string"
        },
        {
            "name": "internationalPhoneNumberVerified",
            "baseName": "internationalPhoneNumberVerified",
            "type": "string"
        },
        {
            "name": "phoneCountryIso2Verified",
            "baseName": "phoneCountryIso2Verified",
            "type": "string"
        },
        {
            "name": "phoneCountryCode",
            "baseName": "phoneCountryCode",
            "type": "number"
        },
        {
            "name": "phoneCountryCodeAlt",
            "baseName": "phoneCountryCodeAlt",
            "type": "number"
        },
        {
            "name": "phoneCountryIso2",
            "baseName": "phoneCountryIso2",
            "type": "string"
        },
        {
            "name": "phoneCountryIso2Alt",
            "baseName": "phoneCountryIso2Alt",
            "type": "string"
        },
        {
            "name": "originCountryIso2",
            "baseName": "originCountryIso2",
            "type": "string"
        },
        {
            "name": "originCountryIso2Alt",
            "baseName": "originCountryIso2Alt",
            "type": "string"
        },
        {
            "name": "phoneNumber",
            "baseName": "phoneNumber",
            "type": "string"
        },
        {
            "name": "verified",
            "baseName": "verified",
            "type": "boolean"
        },
        {
            "name": "score",
            "baseName": "score",
            "type": "number"
        },
        {
            "name": "countryIso2",
            "baseName": "countryIso2",
            "type": "string"
        }    ];

    static getAttributeTypeMap() {
        return FirstLastNamePhoneCodedOut.attributeTypeMap;
    }
}


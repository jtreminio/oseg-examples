/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can\'t find here? We have many more features coming soon. Let us know, we\'ll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.29
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Classified typed proper names
*/
export class ProperNounCategorizedOut {
    'script'?: string;
    'id'?: string;
    'explanation'?: string;
    /**
    * The input name
    */
    'name'?: string;
    /**
    * The most likely common name type
    */
    'commonType'?: string;
    /**
    * Best alternative for : The most likely common name type
    */
    'commonTypeAlt'?: string;
    /**
    * Higher score is better, but score is not normalized. Use calibratedProbability if available. 
    */
    'score'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "script",
            "baseName": "script",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "explanation",
            "baseName": "explanation",
            "type": "string"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string"
        },
        {
            "name": "commonType",
            "baseName": "commonType",
            "type": "string"
        },
        {
            "name": "commonTypeAlt",
            "baseName": "commonTypeAlt",
            "type": "string"
        },
        {
            "name": "score",
            "baseName": "score",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return ProperNounCategorizedOut.attributeTypeMap;
    }
}


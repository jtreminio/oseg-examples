/**
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can\'t find here? We have many more features coming soon. Let us know, we\'ll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.29
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';
import { ReligionStatOut } from './religionStatOut';

/**
* Represents the output of inferring the LIKELY country of Origin from a personal name.
*/
export class FirstLastNameGeoOut {
    'script'?: string;
    'id'?: string;
    'explanation'?: string;
    /**
    * The first name (also known as given name)
    */
    'firstName'?: string;
    /**
    * The last name (also known as family name, or surname)
    */
    'lastName'?: string;
    /**
    * Higher score is better, but score is not normalized. Use calibratedProbability if available. 
    */
    'score'?: number;
    /**
    * Most likely country 
    */
    'country'?: string;
    /**
    * Second best alternative : country 
    */
    'countryAlt'?: string;
    /**
    * Most likely region (based on country ISO2 code)
    */
    'region'?: string;
    /**
    * Most likely top region (based on country ISO2 code)
    */
    'topRegion'?: string;
    /**
    * Most likely sub region (based on country ISO2 code)
    */
    'subRegion'?: string;
    /**
    * List countries (top 10)
    */
    'countriesTop'?: Array<string>;
    /**
    * The calibrated probability for country to have been guessed correctly. -1 = still calibrating. 
    */
    'probabilityCalibrated'?: number;
    /**
    * The calibrated probability for country OR countryAlt to have been guessed correctly. -1 = still calibrating. 
    */
    'probabilityAltCalibrated'?: number;
    /**
    * Geographic religious statistics, assuming country is correctly predicted.
    */
    'religionStats'?: Array<ReligionStatOut>;
    /**
    * Geographic religious statistics, for country best alternative.
    */
    'religionStatsAlt'?: Array<ReligionStatOut>;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "script",
            "baseName": "script",
            "type": "string"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string"
        },
        {
            "name": "explanation",
            "baseName": "explanation",
            "type": "string"
        },
        {
            "name": "firstName",
            "baseName": "firstName",
            "type": "string"
        },
        {
            "name": "lastName",
            "baseName": "lastName",
            "type": "string"
        },
        {
            "name": "score",
            "baseName": "score",
            "type": "number"
        },
        {
            "name": "country",
            "baseName": "country",
            "type": "string"
        },
        {
            "name": "countryAlt",
            "baseName": "countryAlt",
            "type": "string"
        },
        {
            "name": "region",
            "baseName": "region",
            "type": "string"
        },
        {
            "name": "topRegion",
            "baseName": "topRegion",
            "type": "string"
        },
        {
            "name": "subRegion",
            "baseName": "subRegion",
            "type": "string"
        },
        {
            "name": "countriesTop",
            "baseName": "countriesTop",
            "type": "Array<string>"
        },
        {
            "name": "probabilityCalibrated",
            "baseName": "probabilityCalibrated",
            "type": "number"
        },
        {
            "name": "probabilityAltCalibrated",
            "baseName": "probabilityAltCalibrated",
            "type": "number"
        },
        {
            "name": "religionStats",
            "baseName": "religionStats",
            "type": "Array<ReligionStatOut>"
        },
        {
            "name": "religionStatsAlt",
            "baseName": "religionStatsAlt",
            "type": "Array<ReligionStatOut>"
        }    ];

    static getAttributeTypeMap() {
        return FirstLastNameGeoOut.attributeTypeMap;
    }
}


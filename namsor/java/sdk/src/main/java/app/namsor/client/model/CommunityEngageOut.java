/*
 * NamSor API v2
 * NamSor API v2 : enpoints to process personal names (gender, cultural origin or ethnicity) in all alphabets or languages. By default, enpoints use 1 unit per name (ex. Gender), but Ethnicity classification uses 10 to 20 units per name depending on taxonomy. Use GET methods for small tests, but prefer POST methods for higher throughput (batch processing of up to 100 names at a time). Need something you can't find here? We have many more features coming soon. Let us know, we'll do our best to add it! 
 *
 * The version of the OpenAPI document: 2.0.29
 * Contact: contact@namsor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package app.namsor.client.model;

import java.util.Objects;
import app.namsor.client.model.PersonalNameDiasporaedOut;
import app.namsor.client.model.PersonalNameGenderedOut;
import app.namsor.client.model.PersonalNameGeoOut;
import app.namsor.client.model.PersonalNameOriginedOut;
import app.namsor.client.model.PersonalNameUSRaceEthnicityOut;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import app.namsor.client.JSON;

/**
 * Represent multiple classifications for community engagement (gender, country, origin, diaspora)
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class CommunityEngageOut {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nullable
  private String id;

  public static final String SERIALIZED_NAME_PERSONAL_NAME_DIASPORAED_OUT = "PersonalNameDiasporaedOut";
  @SerializedName(SERIALIZED_NAME_PERSONAL_NAME_DIASPORAED_OUT)
  @javax.annotation.Nullable
  private PersonalNameDiasporaedOut personalNameDiasporaedOut;

  public static final String SERIALIZED_NAME_PERSONAL_NAME_ORIGINED_OUT = "PersonalNameOriginedOut";
  @SerializedName(SERIALIZED_NAME_PERSONAL_NAME_ORIGINED_OUT)
  @javax.annotation.Nullable
  private PersonalNameOriginedOut personalNameOriginedOut;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  @javax.annotation.Nullable
  private PersonalNameGeoOut country;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  @javax.annotation.Nullable
  private PersonalNameGenderedOut gender;

  public static final String SERIALIZED_NAME_PERSONAL_NAME_U_S_RACE_ETHNICITY_OUT = "PersonalNameUSRaceEthnicityOut";
  @SerializedName(SERIALIZED_NAME_PERSONAL_NAME_U_S_RACE_ETHNICITY_OUT)
  @javax.annotation.Nullable
  private PersonalNameUSRaceEthnicityOut personalNameUSRaceEthnicityOut;

  public static final String SERIALIZED_NAME_PRIME = "prime";
  @SerializedName(SERIALIZED_NAME_PRIME)
  @javax.annotation.Nullable
  private Boolean prime;

  public static final String SERIALIZED_NAME_SCOPED = "scoped";
  @SerializedName(SERIALIZED_NAME_SCOPED)
  @javax.annotation.Nullable
  private Boolean scoped;

  public static final String SERIALIZED_NAME_SCRIPT = "script";
  @SerializedName(SERIALIZED_NAME_SCRIPT)
  @javax.annotation.Nullable
  private String script;

  public CommunityEngageOut() {
  }

  public CommunityEngageOut id(@javax.annotation.Nullable String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nullable String id) {
    this.id = id;
  }


  public CommunityEngageOut personalNameDiasporaedOut(@javax.annotation.Nullable PersonalNameDiasporaedOut personalNameDiasporaedOut) {
    this.personalNameDiasporaedOut = personalNameDiasporaedOut;
    return this;
  }

  /**
   * Get personalNameDiasporaedOut
   * @return personalNameDiasporaedOut
   */
  @javax.annotation.Nullable
  public PersonalNameDiasporaedOut getPersonalNameDiasporaedOut() {
    return personalNameDiasporaedOut;
  }

  public void setPersonalNameDiasporaedOut(@javax.annotation.Nullable PersonalNameDiasporaedOut personalNameDiasporaedOut) {
    this.personalNameDiasporaedOut = personalNameDiasporaedOut;
  }


  public CommunityEngageOut personalNameOriginedOut(@javax.annotation.Nullable PersonalNameOriginedOut personalNameOriginedOut) {
    this.personalNameOriginedOut = personalNameOriginedOut;
    return this;
  }

  /**
   * Get personalNameOriginedOut
   * @return personalNameOriginedOut
   */
  @javax.annotation.Nullable
  public PersonalNameOriginedOut getPersonalNameOriginedOut() {
    return personalNameOriginedOut;
  }

  public void setPersonalNameOriginedOut(@javax.annotation.Nullable PersonalNameOriginedOut personalNameOriginedOut) {
    this.personalNameOriginedOut = personalNameOriginedOut;
  }


  public CommunityEngageOut country(@javax.annotation.Nullable PersonalNameGeoOut country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public PersonalNameGeoOut getCountry() {
    return country;
  }

  public void setCountry(@javax.annotation.Nullable PersonalNameGeoOut country) {
    this.country = country;
  }


  public CommunityEngageOut gender(@javax.annotation.Nullable PersonalNameGenderedOut gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public PersonalNameGenderedOut getGender() {
    return gender;
  }

  public void setGender(@javax.annotation.Nullable PersonalNameGenderedOut gender) {
    this.gender = gender;
  }


  public CommunityEngageOut personalNameUSRaceEthnicityOut(@javax.annotation.Nullable PersonalNameUSRaceEthnicityOut personalNameUSRaceEthnicityOut) {
    this.personalNameUSRaceEthnicityOut = personalNameUSRaceEthnicityOut;
    return this;
  }

  /**
   * Get personalNameUSRaceEthnicityOut
   * @return personalNameUSRaceEthnicityOut
   */
  @javax.annotation.Nullable
  public PersonalNameUSRaceEthnicityOut getPersonalNameUSRaceEthnicityOut() {
    return personalNameUSRaceEthnicityOut;
  }

  public void setPersonalNameUSRaceEthnicityOut(@javax.annotation.Nullable PersonalNameUSRaceEthnicityOut personalNameUSRaceEthnicityOut) {
    this.personalNameUSRaceEthnicityOut = personalNameUSRaceEthnicityOut;
  }


  public CommunityEngageOut prime(@javax.annotation.Nullable Boolean prime) {
    this.prime = prime;
    return this;
  }

  /**
   * Get prime
   * @return prime
   */
  @javax.annotation.Nullable
  public Boolean getPrime() {
    return prime;
  }

  public void setPrime(@javax.annotation.Nullable Boolean prime) {
    this.prime = prime;
  }


  public CommunityEngageOut scoped(@javax.annotation.Nullable Boolean scoped) {
    this.scoped = scoped;
    return this;
  }

  /**
   * Get scoped
   * @return scoped
   */
  @javax.annotation.Nullable
  public Boolean getScoped() {
    return scoped;
  }

  public void setScoped(@javax.annotation.Nullable Boolean scoped) {
    this.scoped = scoped;
  }


  public CommunityEngageOut script(@javax.annotation.Nullable String script) {
    this.script = script;
    return this;
  }

  /**
   * Get script
   * @return script
   */
  @javax.annotation.Nullable
  public String getScript() {
    return script;
  }

  public void setScript(@javax.annotation.Nullable String script) {
    this.script = script;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CommunityEngageOut communityEngageOut = (CommunityEngageOut) o;
    return Objects.equals(this.id, communityEngageOut.id) &&
        Objects.equals(this.personalNameDiasporaedOut, communityEngageOut.personalNameDiasporaedOut) &&
        Objects.equals(this.personalNameOriginedOut, communityEngageOut.personalNameOriginedOut) &&
        Objects.equals(this.country, communityEngageOut.country) &&
        Objects.equals(this.gender, communityEngageOut.gender) &&
        Objects.equals(this.personalNameUSRaceEthnicityOut, communityEngageOut.personalNameUSRaceEthnicityOut) &&
        Objects.equals(this.prime, communityEngageOut.prime) &&
        Objects.equals(this.scoped, communityEngageOut.scoped) &&
        Objects.equals(this.script, communityEngageOut.script);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, personalNameDiasporaedOut, personalNameOriginedOut, country, gender, personalNameUSRaceEthnicityOut, prime, scoped, script);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CommunityEngageOut {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    personalNameDiasporaedOut: ").append(toIndentedString(personalNameDiasporaedOut)).append("\n");
    sb.append("    personalNameOriginedOut: ").append(toIndentedString(personalNameOriginedOut)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    personalNameUSRaceEthnicityOut: ").append(toIndentedString(personalNameUSRaceEthnicityOut)).append("\n");
    sb.append("    prime: ").append(toIndentedString(prime)).append("\n");
    sb.append("    scoped: ").append(toIndentedString(scoped)).append("\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("PersonalNameDiasporaedOut");
    openapiFields.add("PersonalNameOriginedOut");
    openapiFields.add("country");
    openapiFields.add("gender");
    openapiFields.add("PersonalNameUSRaceEthnicityOut");
    openapiFields.add("prime");
    openapiFields.add("scoped");
    openapiFields.add("script");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CommunityEngageOut
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CommunityEngageOut.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CommunityEngageOut is not found in the empty JSON string", CommunityEngageOut.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CommunityEngageOut.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CommunityEngageOut` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `PersonalNameDiasporaedOut`
      if (jsonObj.get("PersonalNameDiasporaedOut") != null && !jsonObj.get("PersonalNameDiasporaedOut").isJsonNull()) {
        PersonalNameDiasporaedOut.validateJsonElement(jsonObj.get("PersonalNameDiasporaedOut"));
      }
      // validate the optional field `PersonalNameOriginedOut`
      if (jsonObj.get("PersonalNameOriginedOut") != null && !jsonObj.get("PersonalNameOriginedOut").isJsonNull()) {
        PersonalNameOriginedOut.validateJsonElement(jsonObj.get("PersonalNameOriginedOut"));
      }
      // validate the optional field `country`
      if (jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) {
        PersonalNameGeoOut.validateJsonElement(jsonObj.get("country"));
      }
      // validate the optional field `gender`
      if (jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) {
        PersonalNameGenderedOut.validateJsonElement(jsonObj.get("gender"));
      }
      // validate the optional field `PersonalNameUSRaceEthnicityOut`
      if (jsonObj.get("PersonalNameUSRaceEthnicityOut") != null && !jsonObj.get("PersonalNameUSRaceEthnicityOut").isJsonNull()) {
        PersonalNameUSRaceEthnicityOut.validateJsonElement(jsonObj.get("PersonalNameUSRaceEthnicityOut"));
      }
      if ((jsonObj.get("script") != null && !jsonObj.get("script").isJsonNull()) && !jsonObj.get("script").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `script` to be a primitive type in the JSON string but got `%s`", jsonObj.get("script").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CommunityEngageOut.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CommunityEngageOut' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CommunityEngageOut> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CommunityEngageOut.class));

       return (TypeAdapter<T>) new TypeAdapter<CommunityEngageOut>() {
           @Override
           public void write(JsonWriter out, CommunityEngageOut value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CommunityEngageOut read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CommunityEngageOut given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CommunityEngageOut
   * @throws IOException if the JSON string is invalid with respect to CommunityEngageOut
   */
  public static CommunityEngageOut fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CommunityEngageOut.class);
  }

  /**
   * Convert an instance of CommunityEngageOut to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

